{
"version":3,
"file":"compile/alamode.js",
"lineCount":1129,
"mappings":"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",
"sources":["node_modules/module/index.js","node_modules/path/index.js","node_modules/@artdeco/pirates/src/regexp.js","node_modules/@artdeco/pirates/src/index.js","node_modules/vm/index.js","node_modules/@a-la/detect-jsx/src/lib/index.js","node_modules/@a-la/detect-jsx/src/index.js","node_modules/stream/index.js","node_modules/restream/src/lib/index.js","node_modules/restream/src/SyncReplaceable.js","node_modules/restream/src/lib/markers.js","node_modules/os/index.js","node_modules/@artdeco/clean-stack/src/index.js","node_modules/erotic/src/lib.js","node_modules/erotic/src/callback.js","node_modules/erotic/src/index.js","node_modules/catchment/src/lib/index.js","node_modules/catchment/src/index.js","node_modules/@a-la/jsx/src/lib/index.js","node_modules/@a-la/jsx/src/lib/extract.js","node_modules/@a-la/jsx/src/lib/parse-content.js","node_modules/@a-la/jsx/src/lib/components.js","node_modules/@a-la/jsx/src/index.js","node_modules/@a-la/markers/src/lib/index.js","node_modules/@a-la/markers/src/index.js","node_modules/@a-la/import/src/lib/index.js","node_modules/makepromise/src/index.js","node_modules/fs/index.js","node_modules/@wrote/exists/src/index.js","node_modules/@wrote/read/src/index.js","node_modules/resolve-dependency/src/index.js","node_modules/fpj/src/index.js","node_modules/@a-la/import/src/lib/rule.js","node_modules/@a-la/import/src/index.js","node_modules/@a-la/import/src/lib/blank.js","node_modules/@a-la/import/src/lib/import-as.js","node_modules/@a-la/export/src/lib/id.js","node_modules/@a-la/export/src/lib/index.js","node_modules/@a-la/export/src/rules/from.js","node_modules/@a-la/export/src/lib/add-exports.js","node_modules/@a-la/export/src/index.js","node_modules/@a-la/export/src/rules/detect.js","node_modules/@a-la/export/src/rules/detect-curly.js","node_modules/@a-la/export/src/rules/detect-default.js","node_modules/@a-la/export/src/rules/default.js","node_modules/@a-la/source-map-generator/src/base64-vlq.js","node_modules/url/index.js","node_modules/@a-la/source-map-generator/src/util.js","node_modules/@a-la/source-map-generator/src/array-set.js","node_modules/@a-la/source-map-generator/src/mapping-list.js","node_modules/@a-la/source-map-generator/src/index.js","src/lib/source-map.js","src/lib/index.js","src/lib/transform.js","src/index.js","src/depack.js"],
"sourcesContent":["export default _module\nexport const {\n  Module,\n  builtinModules,\n  runMain,\n  wrap,\n} = _module","export default path\nexport const {\n  basename,\n  delimiter,\n  dirname,\n  extname,\n  format,\n  isAbsolute,\n  join,\n  normalize,\n  parse,\n  posix,\n  relative,\n  resolve,\n  sep,\n  win32,\n} = path","/**\n * @license\n * James Talmage <james@talmage.io> (github.com/jamestalmage)\n */\nexport default /^(?:.*[\\\\/])?node_modules(?:[\\\\/].*)?$/","/**\n * @license\n * (c) 2015 Ari Porad (@ariporad) <http://ariporad.com>. License: ariporad.mit-license.org\n */\nimport BuiltinModule from 'module'\nimport { extname, resolve } from 'path'\nimport nodeModulesRegex from './regexp'\n\n// Guard against poorly mocked module constructors.\nconst Module =\n  module.constructor.length > 1 ? module.constructor : BuiltinModule\n\nconst HOOK_RETURNED_NOTHING_ERROR_MESSAGE =\n  '[Pirates] A hook returned a non-string, or nothing at all! This is a' +\n  ' violation of intergalactic law!\\n' +\n  '--------------------\\n' +\n  'If you have no idea what this means or what Pirates is, let me explain: ' +\n  'Pirates is a module that makes is easy to implement require hooks. One of' +\n  \" the require hooks you're using uses it. One of these require hooks\" +\n  \" didn't return anything from it's handler, so we don't know what to\" +\n  ' do. You might want to debug this.'\n\n/**\n * @param {string} filename\n * @param {!Array<string>} exts\n * @param {?function(string): boolean} matcher\n * @param {boolean} ignoreNodeModules\n */\nfunction shouldCompile(filename, exts, matcher, ignoreNodeModules) {\n  if (typeof filename != 'string') {\n    return false\n  }\n  if (!exts.includes(extname(filename))) {\n    return false\n  }\n\n  const resolvedFilename = resolve(filename)\n\n  if (ignoreNodeModules && nodeModulesRegex.test(resolvedFilename)) {\n    return false\n  }\n  if (matcher && typeof matcher == 'function') {\n    return !!matcher(resolvedFilename)\n  }\n\n  return true\n}\n\n/**\n * Add a require hook.\n * @param {function(string, string)} hook The hook. Accepts the code of the module and the filename. Required.\n * @param {!_pirates.Config} [opts] Options for the program.\n * @param {(string|!Array<string>)} [opts.exts=\".js\"] The extension or extensions to hook. Should start with `.`. Default `.js`.\n * @param {function(string): boolean} [opts.matcher] A matcher function, will be called with path to a file. Should return truthy if the file should be hooked, falsy otherwise.\n * @param {boolean} [opts.ignoreNodeModules=false] Auto-ignore `node_modules`. Independent of any matcher. Default `false`.\n * @returns {function()} revert - Reverts the hooks.\n */\nexport default function addHook(hook, opts = {}) {\n  let {\n    exts = ['.js'],\n    ignoreNodeModules = true,\n    matcher = null,\n  } = opts\n\n  const extensions = Array.isArray(exts) ? exts : [exts]\n\n  let reverted = false\n  const loaders = {}\n  const oldLoaders = {}\n\n  // We need to do this to fix #15. Basically, if you use a non-standard extension (ie. .jsx), then\n  // We modify the .js loader, then use the modified .js loader for as the base for .jsx.\n  // This prevents that.\n  const originalJSLoader = Module['_extensions']['.js']\n\n  extensions.forEach((ext) => {\n    if (typeof ext != 'string')\n      throw new TypeError(`Invalid Extension: ${ext}`)\n\n    const oldLoader = Module['_extensions'][ext] || originalJSLoader\n    oldLoaders[ext] = oldLoader\n\n    loaders[ext] = Module['_extensions'][ext] = function newLoader(mod, filename) {\n      let compile\n      if (!reverted) {\n        if (shouldCompile(filename, extensions, matcher, ignoreNodeModules)) {\n          compile = mod['_compile']\n          mod['_compile'] = function _compile(code) {\n            // reset the compile immediately as otherwise we end up having the\n            // compile function being changed even though this loader might be reverted\n            // Not reverting it here leads to long useless compile chains when doing\n            // addHook -> revert -> addHook -> revert -> ...\n            // The compile function is also anyway created new when the loader is called a second time.\n            mod['_compile'] = compile\n            const newCode = hook(code, filename)\n            if (typeof newCode != 'string') {\n              throw new Error(HOOK_RETURNED_NOTHING_ERROR_MESSAGE)\n            }\n\n            return mod['_compile'](newCode, filename)\n          }\n        }\n      }\n\n      oldLoader(mod, filename)\n    }\n  })\n  return function revert() {\n    if (reverted) return\n    reverted = true\n\n    extensions.forEach((ext) => {\n      // if the current loader for the extension is our loader then unregister it and set the oldLoader again\n      // if not we can not do anything as we cannot remove a loader from within the loader-chain\n      if (Module['_extensions'][ext] === loaders[ext]) {\n        Module['_extensions'][ext] = oldLoaders[ext]\n      }\n    })\n  }\n}\n\n/* typal types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_pirates.Config} Config Options for the program.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _pirates.Config Options for the program.\n * @prop {(string|!Array<string>)} [exts=\".js\"] The extension or extensions to hook. Should start with `.`. Default `.js`.\n * @prop {function(string): boolean} [matcher] A matcher function, will be called with path to a file. Should return truthy if the file should be hooked, falsy otherwise.\n * @prop {boolean} [ignoreNodeModules=false] Auto-ignore `node_modules`. Independent of any matcher. Default `false`.\n */\n","export default vm\nexport const {\n  Script,\n  createContext,\n  isContext,\n  runInContext,\n  runInDebugContext,\n  runInNewContext,\n  runInThisContext,\n} = vm","/**\n * The function to extract the position of the symbol from the error due to the fact that the script body couldn't be evaluated by the _vm.Script_ constructor.\n * @param {string} stack The error stack.\n * @param {string} input The input which was passed to the evaluation.\n */\nexport const findPosition = (stack, input) => {\n  const [h, , l2] = stack.split('\\n')\n  const l = parseInt(h.replace(/.+?(\\d+)$/, (m, d) => d)) - 1\n  const c = l2.indexOf('^')\n  const { length } = input.split('\\n').slice(0, l).join('\\n')\n  const lb = length + c + (l ? 1 : 0)\n  return lb\n}","import { Script } from 'vm'\nimport { findPosition } from './lib'\n\n/**\n * Returns the index of the opening `<` symbol in a JSX tag by calling a Script constructor and extracting information from the error message.\n * @param {string} input The string to evaluate in the V8 VM as JavaScript with JSX. If there is no `<`, the `null` is returned. Any another error in code will be thrown as is.\n */\nconst detectJSX = (input) => {\n  try {\n    new Script(input)\n  } catch (err) {\n    const { message, stack } = err\n    if (!/Unexpected token '?</.test(message)) throw err\n    const bl = findPosition(stack, input)\n    return bl\n  }\n  return null\n}\n\nexport default detectJSX\n\n/* documentary types/index.xml */\n/**\n * @typedef {Object} Config Options for the program.\n * @prop {boolean} [shouldRun=true] A boolean option. Default `true`.\n * @prop {string} text A text to return.\n */\n","export default stream\nexport const {\n  Duplex,\n  PassThrough,\n  Readable,\n  Stream,\n  Transform,\n  Writable,\n} = stream","export function checkRule(reObject) {\n  if (typeof reObject != 'object') {\n    return false\n  }\n  const { re, replacement } = reObject\n  const hasRe = re instanceof RegExp\n  const type = ['string', 'function'].indexOf(typeof replacement) != -1\n  return hasRe && type\n}\n\nexport const hideStack = (commonError, thrownError) => {\n  if (!(thrownError instanceof Error)) throw thrownError\n  const [, , commonLine] = commonError.stack.split('\\n', 3)\n  const i = thrownError.stack.indexOf(commonLine)\n  if (i == -1) throw thrownError\n  const stack = thrownError.stack.substr(0, i - 1)\n  const li = stack.lastIndexOf('\\n')\n  thrownError.stack = stack.substr(0, li)\n  throw thrownError\n}","import { checkRule, hideStack } from './lib'\n\n/**\n  * _SyncReplaceable_ function receives the whole string and returns the result of transform rules which are either sync function replacers or string replacements (see https://github.com/artdecocode/restream#rule-type for more info). This is not a class and just a function.\n  * @param {string|!Buffer} input The string or buffer to transform synchronously using the replacements. Does not support asynchronous replacements.\n  * @param {!Array<!_restream.Rule>} rules An array with rules.\n  * @return {string}\n  * @example\n```\n// markdown __ to html <em> implementation\nconst stream = SyncReplaceable('__hello world__', {\n  re: /__(\\S+)__/g,\n  replacement(match, p1) {\n    return `<em>${p1}</em>`\n  },\n})\n```\n  */\nfunction SyncReplaceable(input, rules) {\n  /**\n   * @suppress {globalThis}\n   */\n  function replace() {\n    const fr = rules.filter(checkRule)\n    const s = fr.reduce((acc, { re, replacement }) => {\n      /** @type {string} */\n      let Acc = acc\n      if (this._broke) return Acc\n\n      if (typeof replacement == 'string') {\n        Acc = Acc.replace(re, replacement)\n        return Acc\n      } else {\n        let commonError\n        const t = Acc.replace(re, (match, ...args) => {\n          commonError = new Error()\n          try {\n            if (this._broke) return match\n            const p = replacement.call(this, match, ...args)\n            return p\n          } catch (e) { // hide stack for sync stack traces\n            hideStack(commonError, e)\n          }\n        })\n        return t\n      }\n    }, `${input}`)\n    return s\n  }\n  replace.brake = () => { replace._broke = true }\n  return replace.call(replace)\n}\n\nexport default SyncReplaceable\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Rule} _restream.Rule\n */","import SyncReplaceable from '../SyncReplaceable'\n\n/**\n * @param {string} name\n */\nconst getDefaultRegExp = (name) => {\n  return new RegExp(`%%_RESTREAM_${name.toUpperCase()}_REPLACEMENT_(\\\\d+)_%%`, 'g')\n}\n\n/**\n * Make a unique string to replace cut text with.\n * @param {string} name\n * @param {number} index\n */\nconst getDefaultReplacement = (name, index) => {\n  return `%%_RESTREAM_${name.toUpperCase()}_REPLACEMENT_${index}_%%`\n}\n\n/**\n * Create a new marker.\n * @param {string} name The name of the matcher, used in the doc marker.\n * @param {!RegExp} re The regular expression used for detection.\n * @param {!_restream.MakeMarkersConfig} [conf] Additional configuration.\n * @param {function(string, number): string} [conf.getReplacement] The function used to create a replacement when some text needs to be cut.\n * @param {function(string): !RegExp} [conf.getRegex] The function used to create a RegExp to detect replaced chunks.\n * @return {!_restream.Marker} The marker.\n */\nconst makeMarker = (name, re, conf) => {\n  const {\n    getReplacement = getDefaultReplacement,\n    getRegex = getDefaultRegExp,\n  } = conf || {}\n  const regExp = getRegex(name)\n  return {\n    name,\n    re,\n    regExp,\n    getReplacement,\n    map: {},\n    lastIndex: 0,\n  }\n}\n\n/**\n * Make markers from a configuration object.\n * @param {!Object.<string, !RegExp>} matchers An object with types of markers to create as keys and their detection regexes as values.\n * @param {!_restream.MakeMarkersConfig} [config] Additional configuration.\n * @param {function(string, number): string} [config.getReplacement] The function used to create a replacement when some text needs to be cut.\n * @param {function(string): !RegExp} [config.getRegex] The function used to create a RegExp to detect replaced chunks.\n * @returns {!Object.<string, !_restream.Marker>} An object with markers for each requested type.\n */\nexport const makeMarkers = (matchers, config) => {\n  const res = Object.keys(matchers).reduce((acc, key) => {\n    const re = matchers[key]\n    const marker = makeMarker(key, re, config)\n    const m = {\n      ...acc,\n      [key]: marker,\n    }\n    return m\n  }, {})\n  return res\n}\n\n/**\n * Make a rule for pasting markers back.\n * @param {!_restream.Marker} marker A marker is used to cut and paste portions of text to exclude them from processing by other rules. Markers should be created using the `makeMarker` factory method that will assign their properties.\n * @param {!(_restream.Rule|Array<!_restream.Rule>)} [pipeRules] Any additional rules to replace the value of the marker before pasting it.\n * @returns {!_restream.Rule} A rule to paste previously replaced chunks.\n */\nexport const makePasteRule = (marker, pipeRules = []) => {\n  const { regExp: re, map } = marker\n  const rule = {\n    re,\n    replacement(match, index) {\n      const m = map[index]\n      delete map[index]\n      const pr = Array.isArray(pipeRules) ? pipeRules : [pipeRules]\n      const res = SyncReplaceable(m, pr)\n      return res\n    },\n  }\n  return rule\n}\n\n/**\n * Make a rule for initial replacement of markers.\n * @param {!_restream.Marker} marker A marker is used to cut and paste portions of text to exclude them from processing by other rules. Markers should be created using the `makeMarker` factory method that will assign their properties.\n * @returns {!_restream.Rule} A rule to cut matched chunks.\n */\nexport const makeCutRule = (marker) => {\n  const { re, map, getReplacement, name } = marker\n  const rule = {\n    re,\n    replacement(match) {\n      const { lastIndex } = marker\n      map[lastIndex] = match\n      marker.lastIndex += 1\n      const m = getReplacement(name, lastIndex)\n      return m\n    },\n  }\n  return rule\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Rule} _restream.Rule\n */\n\n/* documentary types/markers.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_restream.Marker} Marker A marker is used to cut and paste portions of text to exclude them from processing by other rules. Markers should be created using the `makeMarker` factory method that will assign their properties.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _restream.Marker A marker is used to cut and paste portions of text to exclude them from processing by other rules. Markers should be created using the `makeMarker` factory method that will assign their properties.\n * @prop {string} name The name of the marker for annotation purposes.\n * @prop {function(string, number): string} getReplacement The function to generate marker placeholders which can be then found, e.g., for (name: `marker`, index: `10`) by default _Restream_ will generate `%%_RESTREAM_MARKER_REPLACEMENT_10_%%`, but can be overriden with this method.\n * @prop {!RegExp} re The regular expression used for detection of the match.\n * @prop {!RegExp} regExp The generated regular expression to replace the marker back to its original value.\n * @prop {!Object<number, string>} map The map which holds detected matches at their indexes.\n * @prop {number} lastIndex The index of the last inserted element. Starts with 0.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_restream.MakeMarkersConfig} MakeMarkersConfig Additional configuration.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _restream.MakeMarkersConfig Additional configuration.\n * @prop {function(string, number): string} [getReplacement] The function used to create a replacement when some text needs to be cut.\n * @prop {function(string): !RegExp} [getRegex] The function used to create a RegExp to detect replaced chunks.\n */\n","export default os\nexport const {\n  EOL,\n  arch,\n  constants,\n  cpus,\n  endianness,\n  freemem,\n  homedir,\n  hostname,\n  loadavg,\n  networkInterfaces,\n  platform,\n  release,\n  tmpdir,\n  totalmem,\n  type,\n  uptime,\n  userInfo,\n} = os","import { homedir } from 'os'\n\nconst extractPathRegex = /\\s+at.*(?:\\(|\\s)(.*)\\)?/\nconst pathRegex = /^(?:(?:(?:node|(?:internal\\/[\\w/]*|.*node_modules\\/(?:IGNORED_MODULES)\\/.*)?\\w+)\\.js:\\d+:\\d+)|native)/\n\nconst homeDir = homedir()\n\n/**\n * Remove internal Node.JS lines from the error stack traces.\n * @param {string} stack The error stack to update.\n * @param {!_cleanStack.Config} [options] Options for the program.\n * @param {boolean} [options.pretty=false] Replace the absolute path to the home directory with the `~`. Default `false`.\n * @param {!Array<string>} [options.ignoredModules=\"\uff3b'pirates'\uff3d\"] Which modules to ignore in the path. Default `\uff3b'pirates'\uff3d`.\n */\nconst cleanStack = (stack, options) => {\n  const {\n    pretty = false, ignoredModules = ['pirates'],\n  } = options || {}\n  const j = ignoredModules.join('|')\n  const re = new RegExp(pathRegex.source.replace('IGNORED_MODULES', j))\n\n  return stack.replace(/\\\\/g, '/')\n    .split('\\n')\n    .filter(x => {\n      const pathMatches = x.match(extractPathRegex)\n      if (pathMatches === null || !pathMatches[1]) {\n        return true\n      }\n\n      const match = pathMatches[1]\n\n      // Electron\n      if (match.includes('.app/Contents/Resources/electron.asar') ||\n        match.includes('.app/Contents/Resources/default_app.asar')) {\n        return false\n      }\n\n      return !re.test(match)\n    })\n    .filter(x => x.trim())\n    .map(x => {\n      if (pretty) {\n        return x.replace(extractPathRegex, (m, p1) => m.replace(p1, p1.replace(homeDir, '~')))\n      }\n\n      return x\n    })\n    .join('\\n')\n}\n\nexport default cleanStack\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_cleanStack.Config} Config Options for the program.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _cleanStack.Config Options for the program.\n * @prop {boolean} [pretty=false] Replace the absolute path to the home directory with the `~`. Default `false`.\n * @prop {!Array<string>} [ignoredModules=\"\uff3b'pirates'\uff3d\"] Which modules to ignore in the path. Default `\uff3b'pirates'\uff3d`.\n */\n","const getLastItem = (array) => {\n  const item = array[array.length - 1]\n  return item\n}\nconst getItemsFrom = (array, from) => array.slice(from)\n\n/**\n * Get a segment of the stack string, defaults are from = 0 and oneLine = false.\n * @param {string} stack the stack string\n * @param {number} [from=0] index from which to slice from\n * @param {boolean} [oneLine=false] Whether just first line must be returned\n * @returns {string} A stack segment starting from the specified line.\n */\nexport const getStackSegment = (stack, from = 0, oneLine = false) => {\n  if (from === 0 && !oneLine) {\n    return stack\n  }\n  const splitStack = stack\n    .split('\\n', oneLine ? from + 1 : undefined)\n  if (oneLine) {\n    const line = getLastItem(splitStack)\n    return line\n  } else {\n    const items = getItemsFrom(splitStack, from)\n    return items.join('\\n')\n  }\n}\n\n/**\n * Get the stack trace part of when the erotic function was called. Disregards\n * first two lines.\n * @param {string} stack error's stack\n * @param {boolean} [transparent] trim the top line as well\n * @returns {string} A part of stack\n */\nexport const getEntryStack = (stack, transparent = false) => {\n  const stackSegment = getStackSegment(stack, 2 + (transparent ? 1 : 0))\n  return stackSegment\n}\n\n/**\n * Get stack line of where the callback was called.\n * @param {string} stack Stack string.\n * @returns {string} Stack line.\n */\nexport const getCalleeStackLine = (stack) => {\n  const calleeStackLine = getStackSegment(stack, 2, true)\n  return calleeStackLine\n}\n\nexport const getStackHeading = message => `Error: ${message}`\n\n/**\n * Extract caller from the function's `arguments`.\n * @param {Object} args arguments\n * @returns {!Function} The caller function from `arguments.callee.caller`.\n */\nexport const getCallerFromArguments = (args) => {\n  const { callee: { caller } } = args\n  return caller\n}","import cleanStack from '@artdeco/clean-stack'\nimport {\n  getCallerFromArguments, getCalleeStackLine, getStackHeading,\n} from './lib'\n\n/**\n * Create a callback.\n * @param {!Function} entryCaller The function which was called at entry.\n * @param {string} entryStack The first line of the error stack to be returned\n * @param {boolean} [shadow=false] Print only entry stack.\n */\nexport function makeCallback(entryCaller, entryStack, shadow = false) {\n  /**\n   * This callback should be called when an asynchronous error occurred.\n   * @param {(string|Error)} messageOrError A message string or an _Error_ object at the point of actual error.\n   * @returns {Error} An error with the updated stack which includes the callee.\n   */\n  function cb(messageOrError) {\n    const caller = getCallerFromArguments(arguments)\n    const { stack: errorStack } = new Error()\n    const calleeStackLine = getCalleeStackLine(errorStack)\n    const isError = messageOrError instanceof Error\n    const message = isError ? messageOrError.message : messageOrError\n\n    const stackHeading = getStackHeading(message)\n    const entryHasCallee = caller !== null && entryCaller === caller\n    const stackMessage = [\n      stackHeading,\n      ...(entryHasCallee || shadow ? [entryStack] : [\n        calleeStackLine,\n        entryStack,\n      ]),\n    ].join('\\n')\n\n    const stack = cleanStack(stackMessage)\n    const properties = { message, stack }\n    const e = isError ? messageOrError : new Error()\n\n    return /** @type {Error} */ (Object.assign(/** @type {!Object} */ (e), properties))\n  }\n\n  return cb\n}","import {\n  getEntryStack, getCallerFromArguments,\n} from './lib'\nimport { makeCallback } from './callback'\n\n/**\n * Returns a function to create an error with a stack trace starting at the line in code when the call was made by the callee.\n * @param {boolean} [transparent] Pretend as if the call to the function lead to the error, without exposing any of the internal stack.\n */\nexport default function erotic(transparent) {\n  const { stack } = new Error()\n  const caller = getCallerFromArguments(arguments)\n  const entryStack = getEntryStack(stack, transparent)\n\n  return makeCallback(caller, entryStack, transparent)\n}","/**\n * Listens for the `error` event once so that when an error in _streamB_ is emitted, is is also emitted in the _streamA_.\n * @param {stream.Stream} streamA The stream that will emit an error once it's caught in the `streamB`.\n * @param {stream.Stream} streamB The stream from which the error originates.\n * @returns The stream the error is listened on, i.e., transparent to calling the `.once` method on that stream.\n */\nexport const pipeError = (streamA, streamB) => {\n  streamB\n    .once('error', e => {\n      streamA.emit('error', e)\n    })\n  return streamB\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Stream} stream.Stream\n */","import { Writable } from 'stream'\nimport erotic from 'erotic'\nimport cleanStack from '@artdeco/clean-stack'\nimport { pipeError } from './lib'\n\nfunction joinBufferData(array) {\n  return array.join('')\n}\n\n/**\n * A writable stream which collects incoming data into memory, and provides a promise to way for the stream to finish. The promise is resolved with joined chunks.\n */\nexport default class Catchment extends Writable {\n  /**\n   * Create a new catchment to pipe a readable stream into and collect all emitted data.\n   * @param {!_catchment.Options} [options] Options to pass to the `Writable` super constructor, and others shown below.\n   * @param {!stream.Readable} [options.rs] A readable stream to automatically pipe into the catchment. If an error occurs during reading of this stream, the catchment promise will be rejected with it.\n   * @param {boolean} [options.binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n   * @example\n   *\n   * import { createReadStream } from 'fs'\n   * import Catchment from 'catchment'\n   *\n   * const rs = createReadStream('file.txt')\n   * const { promise } = new Catchment({ rs })\n   * const res = await promise\n   */\n  constructor(options) {\n    const {\n      binary = false, rs = null, ...opts\n    } = options || {}\n    /** @suppress {missingProperties} */\n    const { er = erotic(true), proxyError } = options || {}\n    const wrap = (_, e) => er(e)\n    super(/** @type {!stream.WritableOptions} */ (opts))\n    this._caughtData = []\n    this._promise = new Promise((r, j) => {\n      this.on('finish', () => {\n        let d\n        if (binary) {\n          d = Buffer.concat(this._caughtData)\n        } else {\n          d = joinBufferData(this._caughtData)\n        }\n        r(d)\n        this._caughtData = []\n      })\n      this.once('error', (e) => {\n        if (e.stack.indexOf('\\n') == -1) {\n          wrap`${e}`\n          j(e)\n        } else {\n          const stack = cleanStack(e.stack)\n          e.stack = stack\n          if (proxyError) wrap`${e}`\n          j(e)\n        }\n      })\n      if (rs) {\n        pipeError(this, rs).pipe(this)\n      }\n    })\n  }\n  _write(chunk, encoding, callback) {\n    this._caughtData.push(chunk)\n    callback()\n  }\n  /**\n   * A promise which will resolve will all data when the stream finishes.\n   * @type {Promise<string|Buffer>}\n   */\n  get promise() {\n    return this._promise\n  }\n}\n\n/**\n * Collect data into a catchment, and return results when the stream finishes.\n * @param {stream.Readable} readable A readable stream to collect all data from. If an error occurs during reading of this stream, the promise will be rejected with it.\n * @param {_catchment.CollectOptions} options Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n * @param {boolean} [options.binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n * @param {boolean} [options.proxyError=false] Sets whether an error emitted by the stream with have its stack start at the line where the `collect` was called rather than inside of the stream. In other words, hides the implementation of the stream. Default `false`.\n * @example\n *\n * import { collect } from 'catchment'\n * import { createReadStream } from 'fs'\n *\n * const rs = createReadStream(path)\n * await collect(rs, { proxyError: true })\n */\nexport const collect = async (readable, options = {}) => {\n  const { promise } = new Catchment({\n    rs: readable,\n    ...options,\n    er: erotic(true),\n  })\n  const res = await promise\n  return res\n}\n\n/* typal types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_catchment.Options} Options Options to pass to the `Writable` super constructor, and others shown below.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _catchment.Options Options to pass to the `Writable` super constructor, and others shown below.\n * @prop {!stream.Readable} [rs] A readable stream to automatically pipe into the catchment. If an error occurs during reading of this stream, the catchment promise will be rejected with it.\n * @prop {boolean} [binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('stream').Readable} stream.Readable\n */\n\n/* typal types/collect.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_catchment.CollectOptions} CollectOptions Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _catchment.CollectOptions Options when collecting data into a catchment. They can extend `Writable` options which will be passed to the `Catchment` constructor.\n * @prop {boolean} [binary=false] Whether to return a raw buffer instead of a string. The string is created by joining all incoming chunks together with `.join('')` method. Default `false`.\n * @prop {boolean} [proxyError=false] Sets whether an error emitted by the stream with have its stack start at the line where the `collect` was called rather than inside of the stream. In other words, hides the implementation of the stream. Default `false`.\n */\n","import { SyncReplaceable } from 'restream'\n\n/**\n * Returns the name of the opening tag from the string starting with <, or `undefined`.\n * @param {string} string The string where to find the tag.\n * @example\n * const s = '<div>hello world</div>'\n * const tag = getTagName(s) // div\n */\nexport const getTagName = (string) => {\n  const [, tagName] = /<\\s*(.+?)(?:\\s+[\\s\\S]+)?\\s*\\/?\\s*>/.exec(string) || []\n  return tagName\n}\n\n// * const getClass = o => Object.keys(o).join(' ')\n\n/**\n * Parses a string with attributes written in jsx, e.g., `id={id}` into an object.\n * @param {string} props The string with properties in the tag\n * @example\n *\n * const El = getProps(\"class={'hello world'} id={id}\")\n * // =>\n   {\n     class: \"'hello world'\",\n     id: 'id'\n    }\n *\n */\nexport const getProps = (props, {\n  withClass = false,\n  classNames = [],\n  renameMap = {},\n} = {}) => {\n  let stack = 0\n  const positions = []\n  let current\n  SyncReplaceable(props, [\n    {\n      re: /[{}]/g,\n      replacement(m, i) {\n        const closing = m == '}'\n        const opening = !closing\n        if (!stack && closing)\n          throw new Error('A closing } is found without opening one.')\n        stack += opening ? 1 : -1\n        if (stack == 1 && opening) {\n          current = {\n            open: i,\n          }\n        } else if (stack == 0 && closing) {\n          current.close = i\n          positions.push(current)\n          current = {}\n        }\n      },\n    },\n  ])\n  if (stack) throw new Error(`Unbalanced props (level ${stack}) ${props}`)\n  const obj = {}\n  const destructuring = []\n  const whitespace = {}\n  const lastClose = positions.reduce((acc, { open, close }) => {\n    const before = props.slice(acc, open)\n    const [, wsBefore, propName, wsBeforeAssign, afterAssign] = /(\\s*)(\\S+)(\\s*)=(\\s*)$/.exec(before) || []\n    const val = props.slice(open + 1, close)\n    if (!propName && !/\\s*\\.\\.\\./.test(val))\n      throw new Error('Could not detect prop name')\n    if (!propName) {\n      destructuring.push(val)\n    } else {\n      obj[propName] = val\n    }\n    whitespace[propName] = { before: wsBefore, beforeAssign: wsBeforeAssign, afterAssign }\n    const beforeOrNot = before || '' // when using destructuring\n    const propOrNot = propName || ''\n    const bb = beforeOrNot.slice(0, beforeOrNot.length - propOrNot.length - 1)\n    const { plain, whitespace: ws } = getPlain(bb)\n    Object.assign(obj, plain)\n    Object.assign(whitespace, ws)\n    return close + 1\n  }, 0)\n  // make sure plain attrs are there when no {} are given\n  if (!positions.length) {\n    const { plain, whitespace: ws } = getPlain(props)\n    Object.assign(obj, plain)\n    Object.assign(whitespace, ws)\n  } else {\n    const whatsLeft = props.slice(lastClose)\n    const { plain, whitespace: ws } = getPlain(whatsLeft)\n    Object.assign(obj, plain)\n    Object.assign(whitespace, ws)\n  }\n  let ro = obj\n  if (withClass || (Array.isArray(classNames) && classNames.length)\n    || Object.keys(classNames).length) {\n    ({ ...ro } = obj)\n    const cl = []\n    Object.keys(ro).forEach((k) => {\n      const p = () => {\n        cl.push(k)\n        delete ro[k]\n      }\n      if (Array.isArray(classNames) && classNames.includes(k)) p()\n      else if (classNames[k]) p()\n      else if (withClass) {\n        const l = k[0]\n        if (l.toUpperCase() == l) p()\n      }\n    })\n\n    if (cl.length) {\n      const className = cl.map((cn) => {\n        const r = cn in renameMap ? renameMap[cn] : cn\n        return r\n      }).join(' ')\n      if (ro.className) {\n        if (/[`\"']$/.test(ro.className)) {\n          ro.className = ro.className.replace(/([`\"'])$/, ` ${className}$1`)\n        } else\n          ro.className += `+' ${className}'`\n      } else if (ro.class) {\n        if (/[`\"']$/.test(ro.class)) {\n          ro.class = ro.class.replace(/([`\"'])$/, ` ${className}$1`)\n        } else\n          ro.class += `+' ${className}'`\n      } else {\n        ro.className = `'${className}'`\n      }\n    }\n  }\n  return { obj: ro, destructuring, whitespace }\n}\n\n/**\n * Returns the matches without {}, such as `id=\"test\"`.\n * @param {string} string The string with plain attributes.\n */\nconst getPlain = (string) => {\n  const r = []\n  const whitespace = {}\n  const res = string.replace(/(\\s*)(\\S+)(\\s*)=(\\s*)([\"'])([\\s\\S]*?)\\5/g, (m, wsBefore, name, wsBeforeAssign, wsAfterAssign, q, val, i) => {\n    whitespace[name] = { before: wsBefore, beforeAssign: wsBeforeAssign, afterAssign: wsAfterAssign }\n    r.push({ i, name, val: `${q}${val}${q}` })\n    return '%'.repeat(m.length)\n  })\n  res.replace(/(\\s*)([^\\s%]+)/g, (m, ws, name, i) => {\n    whitespace[name] = { before: ws }\n    r.push({ i, name, val: 'true' }) // boolean\n  })\n  const obj = [...r.reduce((acc, { i, name, val }) => {\n    acc[i] = [name, val]\n    return acc\n  }, [])].filter(Boolean).reduce((acc, [name, val]) => {\n    acc[name] = val\n    return acc\n  }, {})\n  return { plain: obj, whitespace }\n}\n\n/**\n * Accepts the parsed node properties to make a JS object string out of them.\n * @param {!Object<string, string>} pp The properties out of which to make a string object.\n * @returns {string|null} Either a JS object body string, or null if no keys were in the object.\n */\nexport\nconst makeObjectBody = (pp, destructuring = [], quoteProps = false, whitespace = {}, beforeCloseWs = '') => {\n  const keys = Object.keys(pp)\n  const { length } = keys\n  if (!length && !destructuring.length) return '{}'\n  const pr = `{${keys.reduce((a, k) => {\n    const v = pp[k]\n    const kk = quoteProps || k.indexOf('-') != -1 ? `'${k}'` : k\n    const { before = '', beforeAssign = '', afterAssign = '' } = whitespace[k] || {}\n    return [...a, `${before}${kk}${beforeAssign}:${afterAssign}${v}`]\n  }, destructuring).join(',')}${beforeCloseWs}}`\n  return pr\n}\n\nexport const isComponentName = (tagName = '') => {\n  const [t] = tagName\n  if (!t) throw new Error('No tag name is given')\n  return t.toUpperCase() == t\n}\n\n/**\n * Creates a string invocation of the pragma function.\n * @param {string} tagName The name of the tag to create, or a reference to a component function.\n * @param {!Object<string, string>} props The properties of the element. The properties' values can be passed as strings or references as the `e` function will be called under the scope in which the JSX is written, e.g., when creating components `const C = ({ reference }) => <div id={reference} class=\"String\"/>`.\n * @param {!Array<string>} children The array with the child nodes which are strings, but encode either a reference, a string or an invocation the the `e` function again. Thus the jsx is parsed recursively depth-first.\n * @param {!Array<string>} [destructuring] Any properties for destructuring.\n * @param {boolean|string} [quoteProps=false] Whether to quote the properties' keys (for Closure compiler).\n * @example\n *\n * const r = pragma('div', { id: \"'STATIC_ID'\" }, [\"'Hello, '\", \"test\", \"'!'\"])\n * // =>\n * e('div',{ id: 'STATIC_ID' },['Hello, ', test, '!'])\n */\nexport const pragma = (tagName, props = {}, children = [], destructuring = [], quoteProps = false, warn = null, whitespace = {}, beforeCloseWs = '') => {\n  const cn = isComponentName(tagName)\n  const tn = cn ? tagName : `'${tagName}'`\n  if (!Object.keys(props).length && !children.length && !destructuring.length) {\n    return `h(${tn})`\n  }\n  const qp = cn && quoteProps == 'dom' ? false : quoteProps\n  if (!cn && destructuring.length && (!quoteProps || quoteProps == 'dom')) {\n    warn && warn(`JSX: destructuring ${destructuring.join(' ')} is used without quoted props on HTML ${tagName}.`)\n  }\n  const pr = makeObjectBody(props, destructuring, qp, whitespace, beforeCloseWs)\n  const c = children.reduce((acc, cc, i) => {\n    const prev = children[i-1]\n    let comma = ''\n    if (prev && /^\\/\\*[\\s\\S]*\\*\\/$/.test(prev)) comma = ''\n    else if (prev && /\\S/.test(prev)) comma = ','\n    return `${acc}${comma}${cc}`\n  }, '')\n  const res = `h(${tn},${pr}${c ? `,${c}` : ''})`\n  return res\n}\n\n// export const newPragma = (tagName, ...args) => {\n//   return `e('${tagName}',${args.join(',')})`\n// }\n\n// * @todo In strict mode, when the length is more, throws an error. In advanced mode, the replacement should be aligned so it is possible to debug it.\n\n/**\n * Replaces a piece of string inside of a string with another chunk.\n * @param {string} input The string inside of which the chunk needs to be replaced.\n * @param {number} index The index of the `<` found with `detect-jsx.findPosition`.\n * @param {number} length The length of the string that needs to be cut out.\n * @param {string} chunk The new string that needs to be placed back into the input.\n *\n */\nexport\nconst replaceChunk = (input, index, length, chunk) => {\n  const before = input.slice(0, index)\n  const after = input.slice(index + length)\n  const ld = length - chunk.length\n  // if (ld < 0)\n  // console.warn('The chunks length is more that replaced input')\n  // throw new Error('The length of the chunk cannot be more than of the replaced value.')\n  let p = chunk\n  if (ld > 0) {\n    p = `${' '.repeat(ld)}${p}`\n  }\n  const res = `${before}${p}${after}`\n  return res\n}","import { SyncReplaceable, makeMarkers, makeCutRule } from 'restream'\nimport { getTagName } from './'\n\nconst findEnding = (string, rules = []) => {\n  let stack = 0\n  let contentEnd\n  const preString = SyncReplaceable(string, [\n    ...rules,\n    {\n      // once the tag is opened with <, its closing symbol > will always be even (nevermind comments & strings)\n      re: /[<>]/g,\n      replacement(m, i) {\n        if (contentEnd) return m\n        const opening = m == '<'\n        const closing = !opening\n        stack += opening ? 1 : -1\n        if (stack == 0 && closing) {\n          contentEnd = i\n        }\n        return m\n      },\n    },\n  ])\n  if (stack) throw new Error(1)\n  return { preString, contentEnd }\n}\n\n/**\n * Returns the outer body of the tag.\n * @param {string} stringWithTag The string in which to find the closing tag. Must start with a `<`.\n */\nconst extract = (stringWithTag) => {\n  const tagName = getTagName(stringWithTag)\n  let contentEnd\n  let props\n  const { arrow } = makeMarkers({\n    arrow: /=>/g,\n  })\n  let preString\n  try {\n    ({ preString, contentEnd } = findEnding(stringWithTag, [ makeCutRule(arrow) ]))\n  } catch (err) {\n    if (err === 1) throw new Error(`Could not find the matching closing > for ${tagName}.`)\n  }\n\n  const string = preString.slice(0, contentEnd + 1)\n  let content = string\n    .replace(/<\\s*[^\\s/>]+/, '')\n  const selfClosing = /\\/\\s*>$/.test(content)\n  if (selfClosing) {\n    props = content.replace(/\\/\\s*>$/, '')\n    content = ''\n    return new ExtractedJSX({\n      string: string.replace(arrow.regExp, '=>'),\n      props: props.replace(arrow.regExp, '=>'),\n      content: '',\n      tagName,\n    })\n  }\n  // now find the corresponding closing tag\n  props = content.replace(/>$/, '')\n  const contentStart = contentEnd + 1\n  contentEnd = false\n  let stack = 1\n  let stringEnd\n  SyncReplaceable(preString, [{\n    // [\\\\s\\\\S] is to not catch the very beginning\n    re: new RegExp(`[\\\\s\\\\S](?:<\\\\s*${tagName}(\\\\s+|>)|/\\\\s*${tagName}\\\\s*>)`, 'g'),\n    replacement(m, opensClosing, i, s) {\n      if (contentEnd) return m\n      const closing = !opensClosing && m.endsWith('>')\n      const opening = !closing\n\n      if (opening) {\n        const untilEnd = s.slice(i)\n        const { contentEnd: ce } = findEnding(untilEnd\n          .replace(/^[\\s\\S]/, ' ')\n          // e.g., <span><a /><span></span></span>\n          //                 ^\n        )\n        const t = untilEnd.slice(0, ce + 1)\n        const tSelfClosing = /\\/\\s*>$/.test(t)\n        if (tSelfClosing) return m\n      }\n\n      stack += opening ? 1 : -1\n      if (stack == 0 && closing) {\n        contentEnd = i\n        stringEnd = contentEnd + m.length\n      }\n      return m\n    },\n  }])\n  if (stack) throw new Error(`Could not find the matching closing </${tagName}>.`)\n  content = preString.slice(contentStart, contentEnd)\n  const string2 = preString.slice(0, stringEnd)\n    .replace(arrow.regExp, '=>')\n\n  return new ExtractedJSX({\n    string: string2,\n    props: props.replace(arrow.regExp, '=>'),\n    content: content.replace(arrow.regExp, '=>'),\n    tagName,\n  })\n}\n\nexport class ExtractedJSX {\n  /**\n   * @param {{ string: string, props: string, content: string, tagName: string }} properties\n   */\n  constructor(properties) {\n    this.string = properties.string\n    this.props = properties.props\n    this.content = properties.content\n    this.tagName = properties.tagName\n  }\n}\n\nexport default extract","import { SyncReplaceable } from 'restream'\nimport extract from './extract'\n\n/**\n * Make a quoted string to interpret by JS.\n * @param {string} s\n * @example\n *\n * getQuoted('The mind always seeks to equilibrium.')\n * // result:\n * `The mind always seeks to equilibrium.`\n */\nexport const getQuoted = (s) => {\n  let _b = '', _a = ''\n  const r = s\n    .replace(/^(\\r?\\n\\s*)([\\s\\S]+)?/, (m, b, v = '') => {\n      _b = b\n      return v\n    })\n    .replace(/([\\s\\S]+?)?(\\r?\\n\\s*)$/, (m, v = '', a = '') => {\n      _a = a\n      return v\n    })\n  const rr = r ? `\\`${r}\\`` : ''\n  return `${_b}${rr}${_a}`\n}\n\n/**\n * Returns the array of children for an element by extracting the parts in `{}`.\n * @param {string} string\n * @example\n * parseSimpleContent('Hello, {test}!')\n * // result:\n * [`Hello, `, test, `!`]\n */\nexport const parseSimpleContent = (string) => {\n  const temps = []\n  // let prev = 0\n  let current = {}\n  let expressionStack = 0\n  let jsxStack = 0\n  SyncReplaceable(string, [{\n    re: /[<{}]/g,\n    replacement(m, i) {\n      if (i < jsxStack) return // blocked by jsx\n      const isExpression = /[{}]/.test(m)\n      let opening\n      if (isExpression) {\n        opening = m == '{'\n        expressionStack += opening ? 1 : -1\n        if (expressionStack == 1 && current.from == undefined) current.from = i\n        else if (expressionStack == 0) {\n          current.to = i + 1\n          current.expression = string.slice(current.from + 1, i)\n          temps.push(current)\n          current = {}\n        }\n      } else {\n        if (expressionStack) return m\n        const extractedJsx = extract(string.slice(i))\n        jsxStack = i + extractedJsx.string.length\n        current.extractedJsx = extractedJsx\n        current.to = jsxStack\n        current.from = i\n        temps.push(current)\n        current = {}\n      }\n    },\n  }, {\n  }])\n  const res = temps.length ? getTemps(string, temps) : [getQuoted(string)]\n  return res\n}\n\n/**\n * Returns the array with broken down string parts either as other strings or expressions.\n * @param {string} string The initial string.\n * @param {Array<!{from: number, to: number, expression: string }>} temps\n * @return {!Array<string>}\n * @private This is called by parseSimpleContent.\n */\nconst getTemps = (string, temps) => {\n  let lastTo = 0\n  const ar = temps.reduce((acc, { from, to, expression, extractedJsx }) => {\n    const b = string.slice(lastTo, from)\n    if (b) acc.push(getQuoted(b))\n    lastTo = to\n    if (expression) acc.push(expression)\n    else if (extractedJsx) acc.push(extractedJsx)\n    return acc\n  }, [])\n  if (lastTo < string.length) {\n    const a = string.slice(lastTo, string.length)\n    // .trim()\n    if (a) ar.push(getQuoted(a))\n  }\n  return ar\n}","import detectJSX from '@a-la/detect-jsx'\nimport { parseSimpleContent } from './parse-content'\nimport { pragma, replaceChunk, getProps } from './'\nimport extract, { ExtractedJSX } from './extract'\n\n\n/* <div id={'id'}>\n  Hello, {test}! {children}\n  <div class={'TEST'} id={id}>test</div>\n</div> */\n\n/**\n * The entry point to transpiling a file.\n * @param {string} input The string to transpile.\n * @param {_alaJsx.Config} config Transpilation config.\n * @returns {string} The transpiled source code with `h` pragma for hyperscript invocations.\n */\nconst transpileJSX = (input, config = {}) => {\n  const { quoteProps, warn, prop2class, classNames, renameMap } = config\n  const position = detectJSX(input)\n  if (position === null) return input\n\n  const s = input.slice(position)\n  const { props = '', content, tagName, string: { length } } = extract(s)\n  const children = parseContent(content, quoteProps, warn, config)\n  const { obj, destructuring, whitespace } = getProps(props.replace(/^ */, ''), {\n    withClass: prop2class,\n    classNames,\n    renameMap,\n  })\n  const beforeCloseWs = /\\s*$/.exec(props) || ['']\n  const f = pragma(tagName, obj, children, destructuring, quoteProps, warn, whitespace, beforeCloseWs)\n  const res = replaceChunk(input, position, length, f)\n  // find another one one\n  const newRes = transpileJSX(res, config)\n  return newRes\n}\n\nexport default transpileJSX\n\n// let f\n// if (props) {\n//   f = pragma(tagName, prop, children) // `p(tag, { ...props }, children)`\n// } else if (children.length == 1) {\n//   f = pragma(tagName, children[0]) // `e(tag, child)`\n// } else if (children.length) {\n//   f = newPragma(tagName, ...children) // `e(tag, child, child2)`\n// }\n\n// parse the content bro parse it\n/**\n * This function will return an array with content of a jsx tag, and the content can be a function to create an element (pragma), a string, or an expression.\n * @param {string} content\n * @param {boolean|string} [quoteProps=false] Whether to quote properties.\n * @param {Function} warn\n * @param {_alaJsx.Config} config\n */\nexport const parseContent = (content, quoteProps = false, warn = null,\n  config = {}) => {\n  if (!content) return []\n  // const C = content\n  // .split('\\n').filter(a => !/^\\s*$/.test(a)).join('\\n')\n  const contents = parseSimpleContent(content) // split by expressions\n  const jsx = contents.reduce((acc, string) => {\n    if (string instanceof ExtractedJSX) {\n      const { props = '', content: part, tagName } = string\n      const { obj, destructuring } = getProps(props, {\n        withClass: config.prop2class,\n        classNames: config.classNames,\n        renameMap: config.renameMap,\n      })\n      const children = parseContent(part, quoteProps, warn, config)\n      const p = pragma(tagName, obj, children, destructuring, quoteProps, warn)\n      return [...acc, p]\n    }\n    const j = detectJSX(string)\n    if (j) {\n      const s = string.slice(j)\n      const { string: { length }, props = '', content: part, tagName } = extract(s)\n      const { obj, destructuring } = getProps(props, {\n        withClass: config.prop2class,\n        classNames: config.classNames,\n        renameMap: config.renameMap,\n      })\n      const children = parseContent(part, quoteProps, warn, config)\n      const p = pragma(tagName, obj, children, destructuring, quoteProps, warn)\n      const strBefore = string.slice(0, j)\n      const strAfter = string.slice(j + length)\n      return [...acc, `${strBefore}${p}${strAfter}`]\n    }\n    return [...acc, string]\n  }, [])\n  return jsx\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..').Config} _alaJsx.Config\n */","import transpileJSX from './lib/components'\nimport { SyncReplaceable,\n  makeMarkers, makeCutRule, makePasteRule } from 'restream'\n\n/**\n * Process a JSX file.\n * @param {string} input The source code with JSX to transpile.\n * @param {!_alaJsx.Config} config Options for the program.\n * @param {(boolean|string)} [config.quoteProps=false] Whether to surround property names with quotes. When the `dom` string is passed, it will only quote props for invoking html components, i.e., those that start with a lowercase letter (E.g., for the _Google Closure Compiler_). Default `false`.\n * @param {function(...string)} [config.warn] The function to receive warnings, e.g., when destructuring of properties is used on dom elements (for Closure Compiler).\n * @param {boolean} [config.prop2class=false] If a property name starts with a capital letter, the `className` of the _VNode_ will be updated. Default `false`.\n * @param {!Array<string>|!Object} [config.classNames] The list of properties to put into the `className` property.\n * @param {!Object<string, string>} [config.renameMap] How to rename classes (only applies to `prop2class` and `classNames`).\n */\nconst jsx = (input, config = {}) => {\n  const { e, defObj, ef, i, ias, ii } = makeMarkers({\n    defObj: /^ *export\\s+default\\s+{[\\s\\S]+?}/mg,\n    e: /^ *export\\s+(?:default\\s+)?/mg,\n    ef: /^ *export\\s+{[^}]+}\\s+from\\s+(['\"])(?:.+?)\\1/mg,\n    i: /^ *import(\\s+([^\\s,]+)\\s*,?)?(\\s*{(?:[^}]+)})?\\s+from\\s+['\"].+['\"]/gm,\n    ias: /^ *import\\s+(?:(.+?)\\s*,\\s*)?\\*\\s+as\\s+.+?\\s+from\\s+['\"].+['\"]/gm,\n    ii: /^ *import\\s+['\"].+['\"]/gm,\n  }, {\n    getReplacement(name, index) {\n      return `/*%%_RESTREAM_${name.toUpperCase()}_REPLACEMENT_${index}_%%*/`\n    },\n    getRegex(name) {\n      return new RegExp(`/\\\\*%%_RESTREAM_${name.toUpperCase()}_REPLACEMENT_(\\\\d+)_%%\\\\*/`, 'g')\n    },\n  })\n  const s = SyncReplaceable(input, [\n    makeCutRule(ef), makeCutRule(defObj), makeCutRule(e),\n    makeCutRule(i), makeCutRule(ias), makeCutRule(ii)])\n  const tt = transpileJSX(s, config)\n  const as = SyncReplaceable(tt, [\n    makePasteRule(ef), makePasteRule(defObj), makePasteRule(e),\n    makePasteRule(i), makePasteRule(ias), makePasteRule(ii)])\n  return as\n}\n\nexport default jsx\n\n/* documentary types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_alaJsx.Config} Config Options for the program.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _alaJsx.Config Options for the program.\n * @prop {(boolean|string)} [quoteProps=false] Whether to surround property names with quotes. When the `dom` string is passed, it will only quote props for invoking html components, i.e., those that start with a lowercase letter (E.g., for the _Google Closure Compiler_). Default `false`.\n * @prop {function(...string)} [warn] The function to receive warnings, e.g., when destructuring of properties is used on dom elements (for Closure Compiler).\n * @prop {boolean} [prop2class=false] If a property name starts with a capital letter, the `className` of the _VNode_ will be updated. Default `false`.\n * @prop {!Array<string>|!Object} [classNames] The list of properties to put into the `className` property.\n * @prop {!Object<string, string>} [renameMap] How to rename classes (only applies to `prop2class` and `classNames`).\n */\n","export const commentsRe =  /\\/\\*(?:[\\s\\S]+?)\\*\\//g\nexport const inlineCommentsRe = /\\/\\/(.+)/gm","import { makeMarkers, makeCutRule, makePasteRule } from 'restream'\nimport { commentsRe, inlineCommentsRe } from './lib'\n\n/**\n * Create a new set of rules, where service markers are used to exclude comments and strings from processing.\n * @param {!Array<!_restream.Rule>} [rules] A set of rules to surround with markers. Typically, this will be done by `alamode`.\n */\nconst makeRules = (rules = []) => {\n  const {\n    comments,\n    inlineComments,\n    strings,\n    literals,\n    escapes,\n    regexes,\n    regexGroups,\n  } = makeMarkers({\n    comments: commentsRe,\n    inlineComments: inlineCommentsRe,\n    strings: /([\"'])(.*?)\\1/gm,\n    literals: /`([\\s\\S]*?)`/gm,\n    escapes: /\\\\[\\\\`'\"/]/g,\n    regexes: /\\/(.+?)\\//gm,\n    regexGroups: /\\[(.*?)\\]/gm,\n  })\n  const mr = [\n    comments, inlineComments, strings, literals,\n    escapes, regexes, regexGroups,\n  ]\n  const [\n    cutComments, cutInlineComments, cutStrings, cutLiterals,\n    cutEscapes, cutRegexes, cutRegexGroups,\n  ] = mr.map(makeCutRule)\n  const [\n    pasteComments, pasteInlineComments, pasteStrings, pasteLiterals,\n    pasteEscapes, pasteRegexes, pasteRegexGroups,\n  ] = mr.map(m => makePasteRule(m))\n\n  const allRules = [\n    cutEscapes,\n    cutComments,\n    cutInlineComments,\n    cutStrings,\n    cutRegexGroups,\n    cutRegexes,\n    cutLiterals,\n    stopRule,\n    ...rules,\n    pasteLiterals,\n    pasteRegexes,\n    pasteRegexGroups,\n    pasteStrings,\n    pasteInlineComments,\n    pasteComments,\n    pasteEscapes,\n  ]\n  return {\n    rules: allRules,\n    markers: {\n      literals,\n      strings,\n      comments,\n      inlineComments,\n      escapes,\n      regexes,\n      regexGroups,\n    },\n  }\n}\n\n/**\n * For debugging where markers went wrong.\n * @type {_restream.Rule}\n */\nconst stopRule = {\n  re: /./,\n  replacement(m) {\n    /** @suppress {checkTypes} */\n    const stop = this['stopProcessing']\n    if (stop) this.brake()\n    return m\n  },\n}\n\nexport default makeRules\n\nexport { inlineCommentsRe, commentsRe }\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('restream').Rule} _restream.Rule\n */\n","export const getRequire = (quotes, src) => {\n  return 'r' + `equire(${quotes}${src}${quotes})`\n}\n\nexport const getIfEsModule = (name) => {\n  const s = `if (${name} && ${name}.__esModule) ${name} = ${name}.default`\n  return s\n}\n\nexport const getDefault = (name, req) => {\n  if (!name) return\n  const ifES = getIfEsModule(name)\n  const d = `${name} = ${req}`\n  return { d, ifES }\n}\n\nexport const replaceRequire = (seg, quotes, src, defName = null) => {\n  const eq = seg.replace(/(\\s+)from(\\s+)([\\s\\S])*/, (m, b, a) => {\n    return `${b}=${a}`\n  })\n  const req = defName ? defName : getRequire(quotes, src)\n  const res = `${eq}${req}`\n  return res\n}\n\n/**\n * @param {string} src\n * @param {!_alamode.Config} config\n */\nexport const getSource = (src, config = {}) => {\n  if (!config.import) return src\n  const { import: { replacement } } = config\n  if (!replacement) return src\n  const { from, to } = replacement\n  if (from === undefined)\n    throw new Error('No \"from\" option is given for the replacement.')\n  if (to === undefined )\n    throw new Error('No \"to\" option is given for the replacement.')\n  const fromRe = new RegExp(replacement.from)\n  const res = src.replace(fromRe, replacement.to)\n  return res\n}\n\n// temp solution, until restream markers can store only part of regex, e.g. '%RESTREAM_MARKER%' instead of %RESTREAM_MARKER% for a string.\nexport const fromRe = /(\\s+from\\s+)(?:%%_RESTREAM_STRINGS_REPLACEMENT_(\\d+)_%%)/\n\n/**\n * @param {!_alamode.Config} config\n */\nexport const alwaysCheckES = (config = {\n  import: {},\n}) => {\n  try {\n    return config.import.esCheck == 'always'\n  } catch (err) {\n    return false\n  }\n}\n/**\n * @param {string} name\n * @param {!_alamode.Config} config\n */\nexport const isAlamodeModule = (name, config = {\n  import: {},\n}) => {\n  try {\n    return config.import.alamodeModules.includes(name)\n  } catch (err) {\n    return false\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('alamode/types').Config} _alamode.Config\n */","import erotic from 'erotic'\n\n// /**\n//  * @param {number} length\n//  * @param {number} i\n//  * @param {!Function} fn\n//  */\n// function checkArgumentIndex(length, i, fn) {\n//   if (i > length - 2) {\n//     throw new Error(`Function${fn.name ? ` ${fn.name}` : ''} does not accept that many arguments (max ${length - 1} + callback).`)\n//   }\n// }\n\n/**\n * Get a promise from a function which otherwise accepts a callback.\n * @param {Function} fn A function to promisify.\n * @param {*|Array<*>} [args] An array of arguments to use in the call, or a single argument.\n * @param {*} [resolveValue] A value to override the value with which the promise will be resolved.\n * @returns {Promise<*>} A promise resolved on callback invocation without an error and rejected on callback called with an error.\n */\nexport default async function makePromise(fn, args, resolveValue) {\n  const er = erotic(true)\n  if (typeof fn != 'function') {\n    throw new Error('Function must be passed.')\n  }\n  const { length: fnLength } = fn\n  if (!fnLength) {\n    throw new Error(`Function${fn.name ? ` ${fn.name}` : ''} does not accept any arguments.`)\n  }\n\n  const res = await new Promise((resolve, reject)=> {\n    const cb = (err, res) => {\n      if (err) {\n        const error = er(err)\n        return reject(error)\n      }\n      return resolve(resolveValue || res)\n    }\n\n    let allArgs = [cb]\n\n    if (Array.isArray(args)) {\n      // args.forEach((arg, i) => {\n      //   checkArgumentIndex(fnLength, i, fn)\n      // })\n      allArgs =  [...args, cb]\n    } else if (Array.from(arguments).length > 1) { // args passed as a single argument, not array\n      // checkArgumentIndex(fnLength, 0, fn)\n      allArgs = [args, cb]\n    }\n    fn(...allArgs)\n  })\n  return res\n}","export default fs\nexport const {\n  ReadStream,\n  Stats,\n  WriteStream,\n  access,\n  accessSync,\n  appendFile,\n  appendFileSync,\n  chmod,\n  chmodSync,\n  chown,\n  chownSync,\n  close,\n  closeSync,\n  constants,\n  copyFile,\n  copyFileSync,\n  createReadStream,\n  createWriteStream,\n  exists,\n  existsSync,\n  fchmod,\n  fchmodSync,\n  fchown,\n  fchownSync,\n  fdatasync,\n  fdatasyncSync,\n  fstat,\n  fstatSync,\n  fsync,\n  fsyncSync,\n  ftruncate,\n  ftruncateSync,\n  futimes,\n  futimesSync,\n  lchmod,\n  lchmodSync,\n  lchown,\n  lchownSync,\n  link,\n  linkSync,\n  lstat,\n  lstatSync,\n  mkdir,\n  mkdirSync,\n  mkdtemp,\n  mkdtempSync,\n  open,\n  openSync,\n  read,\n  readFile,\n  readFileSync,\n  readSync,\n  readdir,\n  readdirSync,\n  readlink,\n  readlinkSync,\n  realpath,\n  realpathSync,\n  rename,\n  renameSync,\n  rmdir,\n  rmdirSync,\n  stat,\n  statSync,\n  symlink,\n  symlinkSync,\n  truncate,\n  truncateSync,\n  unlink,\n  unlinkSync,\n  unwatchFile,\n  utimes,\n  utimesSync,\n  watch,\n  watchFile,\n  write,\n  writeFile,\n  writeFileSync,\n  writeSync,\n} = fs","import makePromise from 'makepromise'\nimport { lstat } from 'fs'\n\n/**\n * Check If The File Or Directory Exists, And Return Stats.\n * @param {string} path The path to check for existence.\n */\nconst exists = async (path) => {\n  try {\n    const ls = /** @type {fs.Stats} */ (await makePromise(lstat, path))\n    return ls\n  } catch (err) {\n    return null\n  }\n}\n\nexport default exists\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('fs').Stats} fs.Stats\n */","import { createReadStream } from 'fs'\nimport { collect } from 'catchment'\n\n/**\n * Read a file.\n * @param {string} path The path to the file to read.\n */\nexport default async function read(path) {\n  const rs = createReadStream(path)\n  /** @type {string} */\n  const res = await collect(rs)\n  return res\n}\n\n/**\n * Read a file as a buffer.\n * @param {string} path The path to the file to read.\n */\nexport async function readBuffer(path) {\n  const rs = createReadStream(path)\n  /** @type {Buffer} */\n  const res = await collect(rs, { binary: true })\n  return res\n}","import exists from '@wrote/exists'\nimport { dirname, join, relative } from 'path'\n\n/**\n * For the given local path that can omit the JS/JSX extension and point to a directory (e.g., `./lib` or `./lib/example`), find that file on the filesystem.\n * @param {string} path The dependency path, to resolve e.g., `./lib`.\n * @param {string} [relativeFrom] The optional path of the file that imports the given path.\n */\nconst resolveDependency = async (path, relativeFrom) => {\n  if (relativeFrom) {\n    const d = dirname(relativeFrom)\n    path = join(d, path)\n  }\n  let e = await exists(path)\n  let res = path\n  let isDir = false\n  if (!e) {\n    res = await checkSources(path)\n    if (!res) throw new Error(`${path}.js or ${path}.jsx is not found.`)\n  } else if (e.isDirectory()) {\n    // first try file\n    let fileChecked = false\n    let fileRes\n    if (!path.endsWith('/')) {\n      fileRes = res = await checkSources(path)\n      fileChecked = true\n    }\n    if (!fileRes) {\n      res = await checkSources(join(path, 'index'))\n      if (!res) {\n        const s = fileChecked ? `${path}.jsx? does not exist, and ` : ''\n        throw new Error(`${s}index.jsx? file is not found in ${path}`)\n      }\n      isDir = true\n    }\n  }\n  return {\n    path: path.startsWith('.') ? relative('', res) : res,\n    isDir,\n  }\n}\n\nconst checkSources = async (path) => {\n  let pp = `${path}.js`\n  let e = await exists(pp)\n  if (!e) pp = `${pp}x`; e = await exists(pp)\n  if (e) return pp\n}\n\nexport default resolveDependency","import { join, relative, resolve, dirname, parse } from 'path'\r\nimport exists from '@wrote/exists'\r\nimport read from '@wrote/read'\r\nimport resolveDep from 'resolve-dependency'\r\n\r\nlet ROOT\r\n\r\n/**\r\n * Finds the location of the `package.json` for the given dependency in the directory, and its entry file.\r\n * @param {string} dir The path to the directory where the requiring file is located.\r\n * @param {string} name The name of the required package.\r\n * @param {!_fpj.Config} opts The options for `fpj`.\r\n * @param {!Array<string>} [opts.fields] Any additional fields from `package.json` file to return.\r\n * @param {boolean} [opts.soft=false] If the entry export (main or module) does not exist, `soft` mode will not throw an error, but add the `hasEntry` property to the output set to _false_. Default `false`.\r\n * @returns {!Promise<!_fpj.Return>}\r\n */\r\nconst findPackageJson = async (dir, name, opts = {}) => {\r\n  if (!ROOT) {\r\n    ({ root: ROOT } = parse(process.cwd()))\r\n  }\r\n  const { fields, soft = false } = opts\r\n  const fold = join(dir, 'node_modules', name)\r\n  const path = join(fold, 'package.json')\r\n  const e = await exists(path)\r\n  if (e) {\r\n    const res = await findEntry(path, fields)\r\n    if (res === undefined)\r\n      throw new Error(`The package ${relative('', path)} does export the module.`)\r\n    else if (!res.entryExists && !soft)\r\n      throw new Error(`The exported module ${res.main} in package ${name} does not exist.`)\r\n    const { entry, version, packageName, main, entryExists, ...rest } = res\r\n    const result = /** @type {!_fpj.Return} */ ({\r\n      entry: relative('', entry),\r\n      packageJson: relative('', path),\r\n      ...(version ? { version } : {}),\r\n      packageName,\r\n      ...(main ? { hasMain: true } : {}),\r\n      ...(!entryExists ? { entryExists: false } : {}),\r\n      ...rest,\r\n    })\r\n    return result\r\n  }\r\n  if (dir == ROOT && !e)\r\n    throw new Error(`Package.json for module ${name} not found.`)\r\n  return findPackageJson(join(resolve(dir), '..'), name, opts)\r\n}\r\n\r\n/**\r\n * Finds the path to the entry based on package.json file.\r\n * @param {string} path\r\n * @param {!Array<string>} fields\r\n */\r\nexport const findEntry = async (path, fields = []) => {\r\n  const f = await read(path)\r\n  let mod, version, packageName, main, rest\r\n  try {\r\n    ({\r\n      'module': mod,\r\n      'version': version,\r\n      'name': packageName,\r\n      'main': main,\r\n      ...rest\r\n    } = JSON.parse(f))\r\n    rest = fields.reduce((acc, current) => {\r\n      acc[current] = rest[current]\r\n      return acc\r\n    }, {})\r\n  } catch (err) {\r\n    throw new Error(`Could not parse ${path}.`)\r\n  }\r\n  const dir = dirname(path)\r\n  let resolved = mod || main\r\n  if (!resolved) {\r\n    const indexExists = await exists(join(dir, 'index.js'))\r\n    if (!indexExists) return undefined\r\n    resolved = main = 'index.js'\r\n  }\r\n  let entry = join(dir, resolved)\r\n  let r\r\n  try {\r\n    ({ path: r } = await resolveDep(entry))\r\n    entry = r\r\n  } catch (err) {/* does not exist */}\r\n  return { entry, version, packageName, main: !mod && main,\r\n    entryExists: !!r,\r\n    ...rest }\r\n}\r\n\r\nexport default findPackageJson\r\n\r\n/* documentary types/index.xml */\r\n/**\r\n * @suppress {nonStandardJsDocs}\r\n * @typedef {_fpj.Config} Config The options for `fpj`.\r\n */\r\n/**\r\n * @suppress {nonStandardJsDocs}\r\n * @typedef {Object} _fpj.Config The options for `fpj`.\r\n * @prop {!Array<string>} [fields] Any additional fields from `package.json` file to return.\r\n * @prop {boolean} [soft=false] If the entry export (main or module) does not exist, `soft` mode will not throw an error, but add the `hasEntry` property to the output set to _false_. Default `false`.\r\n */\r\n/**\r\n * @suppress {nonStandardJsDocs}\r\n * @typedef {_fpj.Return} Return The return type of the program.\r\n */\r\n/**\r\n * @suppress {nonStandardJsDocs}\r\n * @typedef {Object} _fpj.Return The return type of the program.\r\n * @prop {string} entry The location of the package's entry file. The preference is given to the `module` field.\r\n * @prop {string} packageJson The path to the package.json file itself.\r\n * @prop {string} packageName The name of the resolved package.\r\n * @prop {string} [version] The version of the package.\r\n * @prop {boolean} [hasMain] Whether the entry is the `main` rather than `module`.\r\n * @prop {boolean} [entryExists] In soft mode, will be set to `false` if the entry file does not exist.\r\n */\r\n","import {\n  getRequire, getDefault, getSource, replaceRequire, fromRe,\n  alwaysCheckES, isAlamodeModule,\n} from './'\nimport fpj from 'fpj'\nimport { dirname, relative } from 'path'\nimport { builtinModules } from 'module'\n\nconst importRe = /^ *import(\\s+([^\\s,]+)\\s*,?)?(\\s*{(?:[^}]+)})?/\nconst re = new RegExp(`${importRe.source}${fromRe.source}`, 'gm')\n\n/**\n * Remaps `as` into `:`.\n * @param {string} namedSeg The segment containing named imports, e.g., `{ test, test2 as alias2 }`.\n */\nconst aliasesToDestructuring = (namedSeg) => {\n  const mm = namedSeg.replace(\n    /(\\s+)as(\\s+)/g,\n    (_, b, a) => {\n      const bb = b.split('\\n').length == 1 ? '' : b\n      return `${bb}:${a}`\n    })\n  return mm\n}\nconst replaceDefault = (def, rep) => {\n  const d = def\n    .replace(',', '')\n    .replace(/([^\\s]+)/, rep)\n  return d\n}\n\n/**\n * A rule to replace `import { method } from 'package'` statement.\n * @type {_restream.Rule}\n */\nconst rule = {\n  re,\n  replacement,\n}\n\n/**\n * @suppress {globalThis}\n * @type {_alamode.\u00c0LaModeReplacer}\n */\nfunction replacement(match, defSeg, defName, namedSeg, fromSeg, sd) {\n  const realSrc = this.markers.strings.map[sd]\n  const [, quotes, src] = /** @type {!RegExpResult} */(\n    /([\"'`])(.+?)\\1/.exec(realSrc)\n  )\n  if (this.renameOnly) {\n    const renamed = getSource(src, this.config)\n    return match.replace(/%%_RESTREAM_STRINGS_REPLACEMENT_\\d+_%%/, `${quotes}${renamed}${quotes}`)\n  }\n\n  const stdlib = getStdlib(this.file, src, this.config)\n  const source = stdlib || getSource(src, this.config)\n  if (stdlib) {\n    if (!namedSeg) {\n      namedSeg = defSeg.replace(/(\\S+)/, '{ $1 }')\n      defSeg = undefined\n      defName = undefined\n    } else if (defSeg) {\n      namedSeg = namedSeg.replace(/{/, `{ ${defName},`)\n      namedSeg = defSeg.replace(/\\S/g, ' ') + namedSeg\n      defSeg = undefined\n      defName = undefined\n    } // if just named, leave as\n  }\n  if (!this.isLocalCache) this.isLocalCache = {}\n  if (this.async) {\n    return getIsLocal(source, this.config, this.file, this.isLocalCache)\n      .then((isLocal) => {\n        return finish(namedSeg, fromSeg, defSeg, defName, quotes, source, isLocal)\n      })\n  }\n  const isLocal = syncGetIsLocal(source, this.config)\n  return finish(namedSeg, fromSeg, defSeg, defName, quotes, source, isLocal)\n}\n\n/**\n * Returns path to stdlib, if it was configured.\n * @param {string} file Relative path to the current file\n * @param {string} src Path to import.\n * @param {Object} [config] \u00c0LaMode configuration.\n */\nconst getStdlib = (file, src, config = {}) => {\n  if (!config.import) return null\n  const { import: { stdlib } } = config\n  if (stdlib) {\n    const { packages, path } = stdlib\n    if (!packages.includes(src)) return null\n    const rel = relative(dirname(file), path)\n      .replace(/\\\\/g, '/')\n      .replace(/.js$/, '')\n    return rel\n  }\n  return null\n}\n\n/**\n * The rules can be async (for building), or sync (for require hook).\n * This is the common method that returns actual replacement.\n */\nconst finish = (namedSeg, fromSeg, defSeg, defName, quotes, source, isLocal) => {\n  const { t, ifES } = getDef(defSeg, defName, quotes, source, isLocal)\n  const replacedNamed = getNamed(namedSeg, fromSeg, quotes, source, defName)\n  const res = [\n    t, replacedNamed, ...(isLocal ? [] : [ifES]),\n  ]\n    .filter(a => a)\n    .join('; ')\n  return `${res};`\n}\n\nconst syncGetIsLocal = (source, config) => {\n  if (alwaysCheckES(config)) return false\n  if (isLib(source)) return true\n  if (builtinModules.includes(source)) return true\n  if (isAlamodeModule(source, config)) return true\n}\n\nconst getIsLocal = async (source, config, file, cache) => {\n  const sync = syncGetIsLocal(source, config)\n  if (sync) return true\n  if (source in cache) return cache[source]\n  if (file) try {\n    const { 'alamode': alamode } = await fpj(dirname(file), source, {\n      fields: ['alamode'],\n    })\n    cache[source] = !!alamode\n    return alamode\n  } catch (err) {\n    return false\n  }\n}\n\nconst isLib = s => /^[./]/.test(s)\n\nconst getDef = (defSeg, defName, quotes, src, isLocal) => {\n  if (!defSeg) return {}\n  const req = getRequire(quotes, src)\n  const { d, ifES } = getDefault(defName, req)\n  const s = replaceDefault(defSeg, d)\n  const o = isLocal ? 'const' : 'let'\n  const t = `${o}${s}`\n  return { t, ifES }\n}\n\nconst getNamed = (namedSeg, fromSeg, quotes, src, defName) => {\n  if (!namedSeg) return null\n  const r = replaceRequire(fromSeg, quotes, src, defName)\n  const n = aliasesToDestructuring(namedSeg)\n  const s = `const${n}${r}`\n  return s\n}\n\nexport default rule\nexport { re }\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('restream').Rule} _restream.Rule\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('alamode/types').\u00c0LaModeReplacer} _alamode.\u00c0LaModeReplacer\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('alamode/types').Config} _alamode.Config\n */","import rule from './lib/rule'\nimport blank from './lib/blank'\nimport importAs from './lib/import-as'\n\n/**\n * An \u00c0 La Sequence to combine multiple rules from this package (such as `import defaultFn`, `import { namedFn }`, _etc_).\n */\nconst seq = [\n  rule,\n  blank,\n  importAs,\n]\n\nexport default seq","import { getSource } from './'\n\nconst fromRe = /(%%_RESTREAM_STRINGS_REPLACEMENT_(\\d+)_%%)/\n\nconst importRe = /(import\\s+)/\n\n/**\n * A rule to replace `import { method } from 'package'` statement.\n * @type {_restream.Rule}\n */\nconst blank = {\n  re: new RegExp(`${importRe.source}${fromRe.source}`, 'gm'),\n  replacement,\n}\n\n/**\n * @suppress {globalThis}\n * @type {_alamode.\u00c0LaModeReplacer}\n */\nfunction replacement(match, Import, _, sd) {\n  const realSrc = this.markers.strings.map[sd]\n  const [, quotes, src] = /** @type {!RegExpResult} */(\n    /([\"'`])(.+?)\\1/.exec(realSrc)\n  )\n  const source = getSource(src, this.config)\n\n  if (this.renameOnly) {\n    const renamed = getSource(src, this.config)\n    return match.replace(/%%_RESTREAM_STRINGS_REPLACEMENT_\\d+_%%/, `${quotes}${renamed}${quotes}`)\n  }\n\n  let rr = Import.replace(/ /g, '').replace('import', 'require(')\n\n\n  rr += `${quotes}${source}${quotes});`\n  return rr\n}\n\nexport default blank","import { replaceRequire, fromRe, getIfEsModule, alwaysCheckES, getSource } from './'\n\nconst importRe = /( *import\\s+(?:(.+?)\\s*,\\s*)?\\*\\s+as\\s+(.+?))/\nconst re = new RegExp(`${importRe.source}${fromRe.source}`, 'gm')\n\n/** @type {_restream.Rule} */\nconst importAs = {\n  re,\n  replacement,\n}\n\n/**\n * @suppress {globalThis}\n * @type {_alamode.\u00c0LaModeReplacer}\n */\nfunction replacement(match, importSeg, defName, varName, fromSeg, sd) {\n  const realSrc = this.markers.strings.map[sd]\n  const [, quotes, src] = /** @type {!RegExpResult} */ (\n    /([\"'`])(.+?)\\1/.exec(realSrc)\n  )\n  const source = getSource(src, this.config)\n  if (this.renameOnly) {\n    return match.replace(/%%_RESTREAM_STRINGS_REPLACEMENT_\\d+_%%/, `${quotes}${source}${quotes}`)\n  }\n  const r = replaceRequire(fromSeg, quotes, source)\n  const { length } = importSeg.split('\\n')\n  const ws = '\\n'.repeat(length - 1)\n  let c\n  const isLocal = /^[./]/.test(source) && !alwaysCheckES(this.config)\n  const o = isLocal ? 'const' : 'let'\n  if (defName) {\n    c = [\n      `${ws}${o} ${varName} = ${defName}${r}`,\n      ...(isLocal ? [] : [getIfEsModule(defName)]),\n    ].join('; ')\n  } else {\n    c = `${ws}const ${varName}${r}`\n  }\n  return `${c};`\n}\n\nexport default importAs\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('restream').Rule} _restream.Rule\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('alamode/types').\u00c0LaModeReplacer} _alamode.\u00c0LaModeReplacer\n */","export const reserved = /^(?:do|if|in|for|let|new|try|var|case|else|enum|eval|null|this|true|void|with|await|break|catch|class|const|false|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|default|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof)$/\n\n/**\n * A regex to match an identifier. Author [Mathias Bynens](https://mathiasbynens.be/demo/javascript-identifier-regex).\n */\nconst idRegex = /(?:[$A-Z_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D])(?:[$0-9A-Z_a-z\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF])*/\n\nexport const aliasRegex = /(?!(?:do|if|in|for|let|new|try|var|case|else|enum|eval|null|this|true|void|with|await|break|catch|class|const|false|super|throw|while|yield|delete|export|import|public|return|static|switch|typeof|extends|finally|package|private|continue|debugger|function|arguments|interface|protected|implements|instanceof))(?:[$A-Z_a-z\\xAA\\xB5\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0620-\\u064A\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07CA-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u08A0-\\u08B4\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09F0\\u09F1\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B71\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CF1\\u0CF2\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D5F-\\u0D61\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EDC-\\u0EDF\\u0F00\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u1820-\\u1877\\u1880-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1950-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B83-\\u1BA0\\u1BAE\\u1BAF\\u1BBA-\\u1BE5\\u1C00-\\u1C23\\u1C4D-\\u1C4F\\u1C5A-\\u1C7D\\u1CE9-\\u1CEC\\u1CEE-\\u1CF1\\u1CF5\\u1CF6\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2071\\u207F\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309B-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA61F\\uA62A\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA840-\\uA873\\uA882-\\uA8B3\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA90A-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF\\uA9E0-\\uA9E4\\uA9E6-\\uA9EF\\uA9FA-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABE2\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC03-\\uDC37\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDD03-\\uDD26\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE80-\\uDEAA\\uDF00-\\uDF19]|\\uD806[\\uDCA0-\\uDCDF\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50\\uDF93-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB]|\\uD83A[\\uDC00-\\uDCC4]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D])(?:[$0-9A-Z_a-z\\xAA\\xB5\\xB7\\xBA\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0300-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u0483-\\u0487\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0561-\\u0587\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u05D0-\\u05EA\\u05F0-\\u05F2\\u0610-\\u061A\\u0620-\\u0669\\u066E-\\u06D3\\u06D5-\\u06DC\\u06DF-\\u06E8\\u06EA-\\u06FC\\u06FF\\u0710-\\u074A\\u074D-\\u07B1\\u07C0-\\u07F5\\u07FA\\u0800-\\u082D\\u0840-\\u085B\\u08A0-\\u08B4\\u08E3-\\u0963\\u0966-\\u096F\\u0971-\\u0983\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BC-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CE\\u09D7\\u09DC\\u09DD\\u09DF-\\u09E3\\u09E6-\\u09F1\\u0A01-\\u0A03\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A75\\u0A81-\\u0A83\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABC-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AD0\\u0AE0-\\u0AE3\\u0AE6-\\u0AEF\\u0AF9\\u0B01-\\u0B03\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3C-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B5C\\u0B5D\\u0B5F-\\u0B63\\u0B66-\\u0B6F\\u0B71\\u0B82\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD0\\u0BD7\\u0BE6-\\u0BEF\\u0C00-\\u0C03\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C58-\\u0C5A\\u0C60-\\u0C63\\u0C66-\\u0C6F\\u0C81-\\u0C83\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBC-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CDE\\u0CE0-\\u0CE3\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D01-\\u0D03\\u0D05-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4E\\u0D57\\u0D5F-\\u0D63\\u0D66-\\u0D6F\\u0D7A-\\u0D7F\\u0D82\\u0D83\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DE6-\\u0DEF\\u0DF2\\u0DF3\\u0E01-\\u0E3A\\u0E40-\\u0E4E\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E87\\u0E88\\u0E8A\\u0E8D\\u0E94-\\u0E97\\u0E99-\\u0E9F\\u0EA1-\\u0EA3\\u0EA5\\u0EA7\\u0EAA\\u0EAB\\u0EAD-\\u0EB9\\u0EBB-\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0EC8-\\u0ECD\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F18\\u0F19\\u0F20-\\u0F29\\u0F35\\u0F37\\u0F39\\u0F3E-\\u0F47\\u0F49-\\u0F6C\\u0F71-\\u0F84\\u0F86-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u1000-\\u1049\\u1050-\\u109D\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u135D-\\u135F\\u1369-\\u1371\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1714\\u1720-\\u1734\\u1740-\\u1753\\u1760-\\u176C\\u176E-\\u1770\\u1772\\u1773\\u1780-\\u17D3\\u17D7\\u17DC\\u17DD\\u17E0-\\u17E9\\u180B-\\u180D\\u1810-\\u1819\\u1820-\\u1877\\u1880-\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1920-\\u192B\\u1930-\\u193B\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A1B\\u1A20-\\u1A5E\\u1A60-\\u1A7C\\u1A7F-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1AB0-\\u1ABD\\u1B00-\\u1B4B\\u1B50-\\u1B59\\u1B6B-\\u1B73\\u1B80-\\u1BF3\\u1C00-\\u1C37\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1CD0-\\u1CD2\\u1CD4-\\u1CF6\\u1CF8\\u1CF9\\u1D00-\\u1DF5\\u1DFC-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u200C\\u200D\\u203F\\u2040\\u2054\\u2071\\u207F\\u2090-\\u209C\\u20D0-\\u20DC\\u20E1\\u20E5-\\u20F0\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2118-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2160-\\u2188\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CF3\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D7F-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2DE0-\\u2DFF\\u3005-\\u3007\\u3021-\\u302F\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u3099-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312D\\u3131-\\u318E\\u31A0-\\u31BA\\u31F0-\\u31FF\\u3400-\\u4DB5\\u4E00-\\u9FD5\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66F\\uA674-\\uA67D\\uA67F-\\uA6F1\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7AD\\uA7B0-\\uA7B7\\uA7F7-\\uA827\\uA840-\\uA873\\uA880-\\uA8C4\\uA8D0-\\uA8D9\\uA8E0-\\uA8F7\\uA8FB\\uA8FD\\uA900-\\uA92D\\uA930-\\uA953\\uA960-\\uA97C\\uA980-\\uA9C0\\uA9CF-\\uA9D9\\uA9E0-\\uA9FE\\uAA00-\\uAA36\\uAA40-\\uAA4D\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A-\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEF\\uAAF2-\\uAAF6\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB65\\uAB70-\\uABEA\\uABEC\\uABED\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE00-\\uFE0F\\uFE20-\\uFE2F\\uFE33\\uFE34\\uFE4D-\\uFE4F\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF3F\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD40-\\uDD74\\uDDFD\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE0\\uDF00-\\uDF1F\\uDF30-\\uDF4A\\uDF50-\\uDF7A\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC60-\\uDC76\\uDC80-\\uDC9E\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDD00-\\uDD15\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBE\\uDDBF\\uDE00-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE33\\uDE38-\\uDE3A\\uDE3F\\uDE60-\\uDE7C\\uDE80-\\uDE9C\\uDEC0-\\uDEC7\\uDEC9-\\uDEE6\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF60-\\uDF72\\uDF80-\\uDF91]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2]|\\uD804[\\uDC00-\\uDC46\\uDC66-\\uDC6F\\uDC7F-\\uDCBA\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD00-\\uDD34\\uDD36-\\uDD3F\\uDD50-\\uDD73\\uDD76\\uDD80-\\uDDC4\\uDDCA-\\uDDCC\\uDDD0-\\uDDDA\\uDDDC\\uDE00-\\uDE11\\uDE13-\\uDE37\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEEA\\uDEF0-\\uDEF9\\uDF00-\\uDF03\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3C-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF50\\uDF57\\uDF5D-\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDC80-\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDB5\\uDDB8-\\uDDC0\\uDDD8-\\uDDDD\\uDE00-\\uDE40\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEB7\\uDEC0-\\uDEC9\\uDF00-\\uDF19\\uDF1D-\\uDF2B\\uDF30-\\uDF39]|\\uD806[\\uDCA0-\\uDCE9\\uDCFF\\uDEC0-\\uDEF8]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDEF0-\\uDEF4\\uDF00-\\uDF36\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDF00-\\uDF44\\uDF50-\\uDF7E\\uDF8F-\\uDF9F]|\\uD82C[\\uDC00\\uDC01]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD836[\\uDE00-\\uDE36\\uDE3B-\\uDE6C\\uDE75\\uDE84\\uDE9B-\\uDE9F\\uDEA1-\\uDEAF]|\\uD83A[\\uDC00-\\uDCC4\\uDCD0-\\uDCD6]|\\uD83B[\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD869[\\uDC00-\\uDED6\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1]|\\uD87E[\\uDC00-\\uDE1D]|\\uDB40[\\uDD00-\\uDDEF])*/\n\nexport default idRegex","import { reserved } from './id'\n\nexport const splitNames = (name) => {\n  const n = name\n    .split(/,\\s*/)\n    .filter(a => a)\n  return n\n}\n\n/**\n * Parse raw name inside of curly brackets and return a map.\n * @param {!Array<string>} names An array with named exports, e.g., `['name as alias', 'name2, name3 as alias3']`.\n * @param {function(string): string} [nameFn] The function which adjusts the name.\n */\nexport const getNamesMap = (names, nameFn) => {\n  const n = names\n    .reduce((acc, s) => {\n      const [nn, a = nn] = s.split(/\\s+as\\s+/)\n      const nt = nn.trim()\n      const at = a.trim()\n      const pn = nameFn ? nameFn(nt) : nt // private name\n      return { ...acc, [at]: pn }\n    }, {})\n  return n\n}\n\nexport const checkReserved = (name) => {\n  name.replace(reserved, () => {\n    throw new Error(`Detected reserved identifier \"${name}\".`)\n  })\n}\n\nconst simpleGetWs = (segment) => {\n  const { length } = segment.split('\\n')\n  const s = '\\n'.repeat(length - 1)\n  return s\n}\n\nexport const getWs = (segment, simple = true) => {\n  if (simple) return simpleGetWs(segment)\n  const lines = segment.split('\\n')\n  const s = lines.map(({ length }, i, { length: l }) => {\n    // last line\n    if (i == l - 1) {\n      const ws = ' '.repeat(length)\n      return ws\n    }\n    return ''\n  }).join('\\n')\n  return s\n}\n\n// temp solution, until restream markers can store only part of regex, e.g. '%RESTREAM_MARKER%' instead of %RESTREAM_MARKER% for a string.\nexport const fromRe = /(\\s+from\\s+)(?:%%_RESTREAM_STRINGS_REPLACEMENT_(\\d+)_%%|%%_RESTREAM_LITERALS_REPLACEMENT_(\\d+)_%%)/\n\nexport const simpleFromRe = /(\\s+from\\s+([\"'`])(.+?)\\4)/","import { splitNames, getWs, fromRe } from '../lib'\n\nconst getPrivateName = (name) => {\n  const s = `$${name}`\n  return s\n}\n\nconst replaceRequire = (fromSeg, quotes, src) => {\n  const eq = fromSeg.replace(/(\\s+)from(\\s+)([\\s\\S])*/, (m, b, a) => {\n    return `${b}=${a}`\n  })\n  const req = 'r'+`equire(${quotes}${src}${quotes});`\n  const res = `${eq}${req}`\n  return res\n}\n\nconst getVarName = (n) => {\n  return n\n    .replace(/[-/]/g, '_')\n    .replace(/[^\\w\\d-]/g, '')\n}\n\n/* export { abc, def } from 'example' */\nconst exportRe = /^( *export\\s+{([^}]+?)})/\nconst advancedRe = new RegExp(\n  `${exportRe.source}${fromRe.source}`, 'gm'\n)\n// const re = new RegExp(\n//   `${exportRe.source}${simpleFromRe.source}`, 'gm'\n// )\n\n/** @this {_alamode.\u00c0LaMode} */\nfunction getRes(exportSeg, src, fromSeg, quotes, names) {\n  const ws = this.noSourceMaps ? '' : getWs(exportSeg)\n  const varName = getVarName(src)\n  const privateName = getPrivateName(varName)\n  const req = replaceRequire(fromSeg, quotes, src)\n  const s = `${ws}const ${privateName}${req}`\n  const n = splitNames(names)\n  const allNames = n.reduce((acc, nn) => {\n    const [name, alias] = nn.split(/\\s+as\\s+/)\n    const nt = name.trim()\n    const at = alias ? alias.trim() : null\n    const fromPrivate = nt == 'default' ? privateName : `${privateName}.${nt}`\n    acc[at || nt] = fromPrivate\n    return acc\n  }, {})\n  this.emit('export', allNames)\n  return s\n}\n\n/**\n * @type {_restream.Rule}\n */\nconst fromRule = {\n  re: advancedRe,\n  replacement,\n}\n\n/**\n * @suppress {globalThis}\n * @type {_alamode.\u00c0LaModeReplacer}\n */\nfunction replacement(match, exportSeg, names, fromSeg, sd, ld) {\n  const realSrc = ld\n    ? this.markers.literals.map[ld]\n    : this.markers.strings.map[sd]\n  const [, quotes, src] = /** @type {!RegExpResult} */ (\n    /([\"'`])(.+?)\\1/.exec(realSrc)\n  )\n  const res = getRes.call(this, exportSeg, src, fromSeg, quotes, names)\n  return res\n}\n\n// const fromRule = {\n//   re,\n//   replacement(match, exportSeg, names, fromSeg, quotes, src) {\n//     const res = getRes.call(this, exportSeg, src, fromSeg, quotes, names)\n//     return res\n//   },\n// }\n\nexport default fromRule\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('restream').Rule} _restream.Rule\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('alamode/types').\u00c0LaModeReplacer} _alamode.\u00c0LaModeReplacer\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('alamode/types').\u00c0LaMode} _alamode.\u00c0LaMode\n */","/**\n * A rule to add exports at the end.\n */\nexport const addExportsRule = {\n  re: /[\\s\\S]*/,\n  replacement(match) {\n    const e = makeExports(this.exports)\n    const s = `${match}${e ? `\\n\\n${e}` : ''}`\n    return s\n  },\n}\n\n/**\n * Create a `module.exports` assignment.\n * @param {Object<string, string>} exportsMap\n */\nexport const makeExports = (exportsMap = {}) => {\n  const { 'default': def, ...rest } = exportsMap\n  const d = def ? `module.exports = ${def}` : ''\n  const r = Object.keys(rest).map((k) => {\n    const v = exportsMap[k]\n    return `module.exports.${k} = ${v}`\n  })\n  const s = [d, ...r].filter(a => a).join('\\n')\n  return s\n}","import detect from './rules/detect'\nimport detectCurly from './rules/detect-curly'\nimport detectDefault from './rules/detect-default'\nimport replaceDefault from './rules/default'\nimport exportFrom from './rules/from'\nimport { makeExports, addExportsRule } from './lib/add-exports'\n\n/**\n * The initial rule to setup listeners for exports emitted during detection rules.\n */\nconst setupRule = {\n  re: /[\\s\\S]*/,\n  replacement(match) {\n    this.exports = {}\n    this.on('export', (e) => {\n      this.exports = { ...this.exports, ...e }\n    })\n    return match\n  },\n}\n\n/**\n * An \u00c0 La Sequence to combine multiple rules from this package to detect and replace exports.\n */\nconst seq = [\n  setupRule,\n  detect,\n  exportFrom,\n  detectCurly,\n  detectDefault,\n  replaceDefault,\n  addExportsRule,\n]\n\nexport { makeExports }\n\nexport default seq","import idRe from '../lib/id'\nimport { checkReserved, getWs } from '../lib'\n\nconst typeRe = /(?:let|const|var|class|function\\s*\\*?|async +function)/\n\n/*\n- export const abc\n- export class ABC {}\n- export function () {}\n- export async function () {}\n*/\n\n/** @type {_restream.Rule} */\nconst detectRule = {\n  re: new RegExp(\n    `^( *export\\\\s+?)( *${typeRe.source}\\\\s+((?:${idRe.source}\\\\s*,?\\\\s*)+))`, 'gm'\n  ),\n  replacement,\n}\n\n/**\n * @suppress {globalThis}\n * @type {_alamode.\u00c0LaModeReplacer}\n */\nfunction replacement(match, exportSeg, whatSeg, name) {\n  const n = name.split(/,\\s*/)\n  n.forEach(nn => {\n    const nt = nn.trim().replace(/\\s+extends\\s+.+/, '')\n    checkReserved(nt)\n    this.emit('export', { [nt]: nt })\n  })\n  if (this.noSourceMaps) return whatSeg\n  const ws = getWs(exportSeg, false)\n  return `${ws}${whatSeg}`\n}\n\nexport default detectRule\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('restream').Rule} _restream.Rule\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('alamode/types').\u00c0LaModeReplacer} _alamode.\u00c0LaModeReplacer\n */","import { getNamesMap, splitNames, getWs } from '../lib'\n\n/** @type {_restream.Rule} */\nconst detectNamed = {\n  re: /^( *export\\s+{([^}]+?)} *)(\\n?)/gm,\n  replacement,\n}\n\n/**\n * @suppress {globalThis}\n * @type {_alamode.\u00c0LaModeReplacer}\n */\nfunction replacement(match, exportsSeg, names, newLine) {\n  const sn = splitNames(names)\n  const n = getNamesMap(sn)\n\n  this.emit('export', n)\n  if (this.noSourceMaps) return ''\n  const ws = getWs(exportsSeg)\n  const nl = newLine ? newLine : ''\n  const res = `${ws}${nl}`\n  return res\n}\n\nexport default detectNamed\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('restream').Rule} _restream.Rule\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('alamode/types').\u00c0LaModeReplacer} _alamode.\u00c0LaModeReplacer\n */","import idRe from '../lib/id'\nimport { checkReserved, getWs } from '../lib'\n\nconst typeRe = /(?:class|function\\s*\\*?|async +function)/\n\n/*\n- export default class MyNewClass {}\n- export default function helloWorld() {}\n- export default async function helloWorld() {}\n*/\n\n/** @type {_restream.Rule} */\nconst detectDefault = {\n  re: new RegExp(\n    `^( *export\\\\s+default\\\\s+?)( *${typeRe.source}\\\\s+(${idRe.source}))`, 'm',\n  ),\n  replacement,\n}\n\n/**\n * @suppress {globalThis}\n * @type {_alamode.\u00c0LaModeReplacer}\n */\nfunction replacement(match, exportSeg, whatSeg, name) {\n  const n = name.trim()\n  checkReserved(n)\n  this.emit('export', { 'default': n })\n  if (this.noSourceMaps) return whatSeg\n  const ws = getWs(exportSeg, false)\n  return `${ws}${whatSeg}`\n}\n\nexport default detectDefault\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('restream').Rule} _restream.Rule\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('alamode/types').\u00c0LaModeReplacer} _alamode.\u00c0LaModeReplacer\n */","/** @type {_restream.Rule} */\nconst replaceDefault = {\n  re: /^( *)(export\\s+)(default\\s+)/m,\n  replacement,\n}\n\n/**\n * @suppress {globalThis}\n * @type {_alamode.\u00c0LaModeReplacer}\n */\nfunction replacement(match, b, exportsSeg, defaultSeg) {\n  const e = exportsSeg.replace(/export ?/, 'module.')\n  const d = defaultSeg.replace(/default ?/, 'exports=')\n  return `${b}${e}${d}`\n}\n\nexport default replaceDefault\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('restream').Rule} _restream.Rule\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('alamode/types').\u00c0LaModeReplacer} _alamode.\u00c0LaModeReplacer\n */","/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n\nconst intToCharMap = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\".split(\"\")\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n * @param {number} number\n */\nconst base64 = (number) => {\n  if (0 <= number && number < intToCharMap.length)\n    return intToCharMap[number]\n  throw new TypeError(\"Must be between 0 and 63: \" + number)\n}\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nconst VLQ_BASE_SHIFT = 5\n\n// binary: 100000\nconst VLQ_BASE = 1 << VLQ_BASE_SHIFT\n\n// binary: 011111\nconst VLQ_BASE_MASK = VLQ_BASE - 1\n\n// binary: 100000\nconst VLQ_CONTINUATION_BIT = VLQ_BASE\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n * @param {number} value\n */\nfunction toVLQSigned(value) {\n  return value < 0\n    ? ((-value) << 1) + 1\n    : (value << 1) + 0\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexport default function base64VLQ_encode(aValue) {\n  let encoded = \"\"\n  let digit\n\n  let vlq = toVLQSigned(aValue)\n\n  do {\n    digit = vlq & VLQ_BASE_MASK\n    vlq >>>= VLQ_BASE_SHIFT\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make\n      // sure the continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT\n    }\n    encoded += base64(digit)\n  } while (vlq > 0)\n\n  return encoded\n}","export default url\nexport const {\n  URL,\n  URLSearchParams,\n  Url,\n  domainToASCII,\n  domainToUnicode,\n  format,\n  parse,\n  resolve,\n} = url","/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nimport { URL } from 'url'\n\nfunction identity(s) {\n  return s\n}\n\nexport const toSetString = identity\nexport const fromSetString = identity\n\n/**\n * @param {?string} aStr1\n * @param {?string} aStr2\n */\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0\n  }\n\n  if (aStr1 === null) {\n    return 1 // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1 // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1\n  }\n\n  return -1\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where the generated positions are compared.\n * @param {!_sourceMapGenerator.Mapping} mappingA\n * @param {!_sourceMapGenerator.Mapping} mappingB\n */\nexport function compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  let cmp = mappingA.generatedLine - mappingB.generatedLine\n  if (cmp !== 0) {\n    return cmp\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn\n  if (cmp !== 0) {\n    return cmp\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source)\n  if (cmp !== 0) {\n    return cmp\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine\n  if (cmp !== 0) {\n    return cmp\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn\n  if (cmp !== 0) {\n    return cmp\n  }\n\n  return strcmp(mappingA.name, mappingB.name)\n}\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented in the source maps specification), and then parse the string as JSON.\n * @param {string} str\n */\nexport function parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, \"\"))\n}\n\n// We use 'http' as the base here because we want URLs processed relative\n// to the safe base to be treated as \"special\" URLs during parsing using\n// the WHATWG URL parsing. This ensures that backslash normalization\n// applies to the path and such.\nconst PROTOCOL = \"http:\"\nconst PROTOCOL_AND_HOST = `${PROTOCOL}//host`\n\n/**\n * Make it easy to create small utilities that tweak a URL's path.\n * @param {function(URL)} cb\n */\nfunction createSafeHandler(cb) {\n  return input => {\n    const type = getURLType(input)\n    const base = buildSafeBase(input)\n    const url = new URL(input, base)\n\n    cb(url)\n\n    const result = url.toString()\n\n    if (type === \"absolute\") {\n      return result\n    } else if (type === \"scheme-relative\") {\n      return result.slice(PROTOCOL.length)\n    } else if (type === \"path-absolute\") {\n      return result.slice(PROTOCOL_AND_HOST.length)\n    }\n\n    // This assumes that the callback will only change\n    // the path, search and hash values.\n    return computeRelativeURL(base, result)\n  }\n}\n\nfunction withBase(url, base) {\n  return new URL(url, base).toString()\n}\n\nfunction buildUniqueSegment(prefix, str) {\n  let id = 0\n  do {\n    const ident = prefix + (id++)\n    if (str.indexOf(ident) === -1) return ident\n  } while (true)\n}\n\nfunction buildSafeBase(str) {\n  const maxDotParts = str.split(\"..\").length - 1\n\n  // If we used a segment that also existed in `str`, then we would be unable\n  // to compute relative paths. For example, if `segment` were just \"a\":\n  //\n  //   const url = \"../../a/\"\n  //   const base = buildSafeBase(url); // http://host/a/a/\n  //   const joined = \"http://host/a/\";\n  //   const result = relative(base, joined);\n  //\n  // Expected: \"../../a/\";\n  // Actual: \"a/\"\n  //\n  const segment = buildUniqueSegment(\"p\", str)\n\n  let base = `${PROTOCOL_AND_HOST}/`\n  for (let i = 0; i < maxDotParts; i++) {\n    base += `${segment}/`\n  }\n  return base\n}\n\nconst ABSOLUTE_SCHEME = /^[A-Za-z0-9+\\-.]+:/\n/**\n * @param {string} url\n */\nfunction getURLType(url) {\n  if (url[0] == \"/\") {\n    if (url[1] == \"/\") return \"scheme-relative\"\n    return \"path-absolute\"\n  }\n\n  return ABSOLUTE_SCHEME.test(url) ? \"absolute\" : \"path-relative\"\n}\n\n/**\n * Given two URLs that are assumed to be on the same\n * protocol/host/user/password build a relative URL from the\n * path, params, and hash values.\n *\n * @param {string|!URL} rootURL The root URL that the target will be relative to.\n * @param {string|!URL} targetURL The target that the relative URL points to.\n * @return A rootURL-relative, normalized URL value.\n */\nfunction computeRelativeURL(rootURL, targetURL) {\n  if (typeof rootURL == \"string\") rootURL = new URL(rootURL)\n  if (typeof targetURL == \"string\") targetURL = new URL(targetURL)\n\n  const targetParts = targetURL.pathname.split(\"/\")\n  const rootParts = rootURL.pathname.split(\"/\")\n\n  // If we've got a URL path ending with a \"/\", we remove it since we'd\n  // otherwise be relative to the wrong location.\n  if (rootParts.length > 0 && !rootParts[rootParts.length - 1]) {\n    rootParts.pop()\n  }\n\n  while (\n    targetParts.length > 0 &&\n    rootParts.length > 0 &&\n    targetParts[0] === rootParts[0]\n  ) {\n    targetParts.shift()\n    rootParts.shift()\n  }\n\n  const relativePath = rootParts\n    .map(() => \"..\")\n    .concat(targetParts)\n    .join(\"/\")\n\n  return relativePath + targetURL.search + targetURL.hash\n}\n\n/**\n * Given a URL, ensure that it is treated as a directory URL.\n *\n * @param {URL} url\n * @return A normalized URL value.\n */\nconst ensureDirectory = createSafeHandler(url => {\n  url.pathname = url.pathname.replace(/\\/?$/, \"/\")\n})\n\n/**\n * Given a URL, strip off any filename if one is present.\n *\n * @param {URL} url\n * @return A normalized URL value.\n */\nconst trimFilename = createSafeHandler(url => {\n  url.href = new URL(\".\", url.toString()).toString()\n})\n\n/**\n * Normalize a given URL.\n * * Convert backslashes.\n * * Remove any \"..\" and \".\" segments.\n *\n * @param {function(!URL)} urlCallback\n * @return A normalized URL value.\n */\nexport const normalize = createSafeHandler(urlCallback => {})\n\n/**\n * Joins two paths/URLs.\n *\n * All returned URLs will be normalized.\n *\n * @param aRoot The root path or URL. Assumed to reference a directory.\n * @param aPath The path or URL to be joined with the root.\n * @return A joined and normalized URL value.\n */\nexport function join(aRoot, aPath) {\n  const pathType = getURLType(aPath)\n  const rootType = getURLType(aRoot)\n\n  aRoot = ensureDirectory(aRoot)\n\n  if (pathType == \"absolute\") {\n    return withBase(aPath, undefined)\n  }\n  if (rootType == \"absolute\") {\n    return withBase(aPath, aRoot)\n  }\n\n  if (pathType == \"scheme-relative\") {\n    return normalize(aPath)\n  }\n  if (rootType == \"scheme-relative\") {\n    return withBase(aPath, withBase(aRoot, PROTOCOL_AND_HOST)).slice(PROTOCOL.length)\n  }\n\n  if (pathType == \"path-absolute\") {\n    return normalize(aPath)\n  }\n  if (rootType == \"path-absolute\") {\n    return withBase(aPath, withBase(aRoot, PROTOCOL_AND_HOST)).slice(PROTOCOL_AND_HOST.length)\n  }\n\n  const base = buildSafeBase(aPath + aRoot)\n  const newPath = withBase(aPath, withBase(aRoot, base))\n  return computeRelativeURL(base, newPath)\n}\n\n/**\n * Make a path relative to a URL or another path. If returning a\n * relative URL is not possible, the original target will be returned.\n * All returned URLs will be normalized.\n *\n * @param {string} rootURL The root path or URL.\n * @param {string} targetURL The path or URL to be made relative to rootURL.\n * @return A rootURL-relative (if possible), normalized URL value.\n */\nexport function relative(rootURL, targetURL) {\n  const result = relativeIfPossible(rootURL, targetURL)\n\n  return typeof result == \"string\" ? result : normalize(targetURL)\n}\n\nfunction relativeIfPossible(rootURL, targetURL) {\n  const urlType = getURLType(rootURL)\n  if (urlType !== getURLType(targetURL)) {\n    return null\n  }\n\n  const base = buildSafeBase(rootURL + targetURL)\n  const root = new URL(rootURL, base)\n  const target = new URL(targetURL, base)\n\n  try {\n    new URL(\"\", target.toString())\n  } catch (err) {\n    // Bail if the URL doesn't support things being relative to it,\n    // For example, data: and blob: URLs.\n    return null\n  }\n\n  if (\n    target.protocol !== root.protocol ||\n    target.user !== root.user ||\n    target.password !== root.password ||\n    target.hostname !== root.hostname ||\n    target.port !== root.port\n  ) {\n    return null\n  }\n\n  return computeRelativeURL(root, target)\n}\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nexport function computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  // The source map spec states that \"sourceRoot\" and \"sources\" entries are to be appended. While\n  // that is a little vague, implementations have generally interpreted that as joining the\n  // URLs with a `/` between then, assuming the \"sourceRoot\" doesn't already end with one.\n  // For example,\n  //\n  //   sourceRoot: \"some-dir\",\n  //   sources: [\"/some-path.js\"]\n  //\n  // and\n  //\n  //   sourceRoot: \"some-dir/\",\n  //   sources: [\"/some-path.js\"]\n  //\n  // must behave as \"some-dir/some-path.js\".\n  //\n  // With this library's the transition to a more URL-focused implementation, that behavior is\n  // preserved here. To acheive that, we trim the \"/\" from absolute-path when a sourceRoot value\n  // is present in order to make the sources entries behave as if they are relative to the\n  // \"sourceRoot\", as they would have if the two strings were simply concated.\n  if (sourceRoot && getURLType(sourceURL) === \"path-absolute\") {\n    sourceURL = sourceURL.replace(/^\\//, \"\")\n  }\n\n  let url = normalize(sourceURL || \"\")\n\n  // Parsing URLs can be expensive, so we only perform these joins when needed.\n  if (sourceRoot) url = join(sourceRoot, url)\n  if (sourceMapURL) url = join(trimFilename(sourceMapURL), url)\n  return url\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('.').Mapping} _sourceMapGenerator.Mapping\n */","/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new member is O(1), testing for membership is O(1), and finding the index of an element is O(1). Removing elements from the set is not supported. Only strings are supported for membership.\n */\nexport default class ArraySet {\n  constructor() {\n    /** @type {!Array<string>} */\n    this._array = []\n    this._set = new Map()\n  }\n\n  /**\n   * Static method for creating ArraySet instances from an existing array.\n   * @param {!Array<string>} array\n   * @param {boolean} [allowDuplicates=false]\n   */\n  static fromArray(array, allowDuplicates = false) {\n    const set = new ArraySet()\n    for (let i = 0, len = array.length; i < len; i++) {\n      set.add(array[i], allowDuplicates)\n    }\n    return set\n  }\n\n  /**\n   * Return how many unique items are in this ArraySet. If duplicates have been added, than those do not count towards the size.\n   */\n  size() {\n    return this._set.size\n  }\n\n  /**\n   * Add the given string to this set.\n   * @param {string} str\n   * @param {boolean} [allowDuplicates=false]\n   */\n  add(str, allowDuplicates = false) {\n    const isDuplicate = this.has(str)\n    const idx = this._array.length\n    if (!isDuplicate || allowDuplicates) {\n      this._array.push(str)\n    }\n    if (!isDuplicate) {\n      this._set.set(str, idx)\n    }\n  }\n\n  /**\n   * Is the given string a member of this set?\n   * @param {string} aStr\n   */\n  has(aStr) {\n    return this._set.has(aStr)\n  }\n\n  /**\n   * What is the index of the given string in the array?\n   * @param {string} aStr\n   */\n  indexOf(aStr) {\n    const idx = this._set.get(aStr)\n    if (idx >= 0) {\n      return idx\n    }\n    throw new Error('\"' + aStr + '\" is not in the set.')\n  }\n\n  /**\n   * What is the element at the given index?\n   *\n   * @param {number} aIdx\n   */\n  at(aIdx) {\n    if (aIdx >= 0 && aIdx < this._array.length) {\n      return this._array[aIdx]\n    }\n    throw new Error(\"No element indexed by \" + aIdx)\n  }\n\n  /**\n   * Returns the array representation of this set (which has the proper indices indicated by indexOf). Note that this is a copy of the internal array used for storing the members so that no one can mess with internal state.\n   */\n  toArray() {\n    return this._array.slice()\n  }\n}","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nimport { compareByGeneratedPositionsInflated } from './util'\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated position.\n * @param {_sourceMapGenerator.Mapping} mappingA\n * @param {_sourceMapGenerator.Mapping} mappingB\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  const { generatedLine: lineA, generatedColumn: columnA } = mappingA\n  const { generatedLine: lineB, generatedColumn: columnB } = mappingB\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n    compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a negligible overhead in general case for a large speedup in case of mappings being added in order.\n */\nexport default class MappingList {\n  constructor() {\n    /** @type {!Array<_sourceMapGenerator.Mapping>} */\n    this._array = []\n    this._sorted = true\n    // Serves as infimum\n    /** @type {_sourceMapGenerator.Mapping} */\n    this._last = { generatedLine: -1, generatedColumn: 0, name: null, originalColumn: null, originalLine: null, source: null }\n  }\n\n  /**\n   * Iterate through internal items. This method takes the same arguments that `Array.prototype.forEach` takes.\n   *\n   * NOTE: The order of the mappings is NOT guaranteed.\n   * @param {function(_sourceMapGenerator.Mapping)} aCallback\n   * @param {!Object} aThisArg\n   */\n  unsortedForEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg)\n  }\n\n  /**\n   * Add the given source mapping.\n   * @param {!_sourceMapGenerator.Mapping} mapping\n   */\n  add(mapping) {\n    if (generatedPositionAfter(this._last, mapping)) {\n      this._last = mapping\n      this._array.push(mapping)\n    } else {\n      this._sorted = false\n      this._array.push(mapping)\n    }\n  }\n\n  /**\n   * Returns the flat, sorted array of mappings. The mappings are sorted by generated position.\n   *\n   * WARNING: This method returns internal data without copying, for performance. The return value must NOT be mutated, and should be treated as an immutable borrow. If you want to take ownership, you must make your own copy.\n   */\n  toArray() {\n    if (!this._sorted) {\n      this._array.sort(compareByGeneratedPositionsInflated)\n      this._sorted = true\n    }\n    return this._array\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('.').Mapping} _sourceMapGenerator.Mapping\n */","/**\n * @license Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nimport base64VLQ from './base64-vlq'\nimport { relative, toSetString, compareByGeneratedPositionsInflated } from './util'\nimport ArraySet from './array-set'\nimport MappingList from './mapping-list'\n\nexport default class SourceMapGenerator {\n  /**\n   * An instance of the SourceMapGenerator represents a source map which is being built incrementally.\n   * @param {_sourceMapGenerator.Config} conf Options for the program.\n   * @param {string} [conf.file] The filename of the generated source.\n   * @param {string} [conf.sourceRoot] A root for all relative URLs in this source map.\n   * @param {boolean} [conf.skipValidation=false] When `true`, disables validation of mappings as they are added. This can improve performance but should be used with discretion, as a last resort. Even then, one should avoid using this flag when running tests, if possible. Default `false`.\n   */\n  constructor(conf = {}) {\n    const { file, sourceRoot, skipValidation = false } = conf\n    this._file = file\n    this._sourceRoot = sourceRoot\n    this._skipValidation = skipValidation\n    this._sources = new ArraySet()\n    this._names = new ArraySet()\n    this._mappings = new MappingList()\n    /** @type {?Object<string, string>} */\n    this._sourcesContents = null\n  }\n\n  /**\n   * Add a single mapping from original source line and column to the generated source's line and column for this source map being created. The mapping object should have the following properties:\n   *\n   *   - generated: An object with the generated line and column positions.\n   *   - original: An object with the original line and column positions.\n   *   - source: The original source file (relative to the sourceRoot).\n   *   - name: An optional original token name for this mapping.\n   *\n   * @param {{generated: !_sourceMapGenerator.Position, original: (?_sourceMapGenerator.Position|undefined), source: (?string|undefined), name: (?string|undefined) }} mapping\n   */\n  addMapping(mapping) {\n    let { generated, original = null, source = null, name = null } = mapping\n    if (!generated) throw new Error('\"generated\" is a required argument')\n\n    if (!this._skipValidation)\n      this._validateMapping(generated, original, source, name)\n\n    if (source) {\n      source = `${source}`\n      if (!this._sources.has(source)) {\n        this._sources.add(source)\n      }\n    }\n\n    if (name) {\n      name = `${name}`\n      if (!this._names.has(name)) {\n        this._names.add(name)\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original ? original.line : null,\n      originalColumn: original ? original.column : null,\n      source,\n      name,\n    })\n  }\n\n  /**\n   * Set the source content for a source file.\n   * @param {string} sourceFile\n   * @param {string} [sourcesContent]\n   */\n  setSourceContent(sourceFile, sourcesContent) {\n    let source = sourceFile\n    if (this._sourceRoot != null) {\n      source = relative(this._sourceRoot, source)\n    }\n\n    if (sourcesContent) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null)\n      }\n      this._sourcesContents[toSetString(source)] = sourcesContent\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[toSetString(source)]\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null\n      }\n    }\n  }\n\n  /**\n   * A mapping can have one of the three levels of data:\n   *\n   *   1. Just the generated position.\n   *   2. The Generated position, original position, and original source.\n   *   3. Generated and original position, original source, as well as a name\n   *      token.\n   *\n   * To maintain consistency, we validate that any new mapping being added falls\n   * in to one of these categories.\n   * @param {_sourceMapGenerator.Position} generated The position of a token.\n   * @param {number} generated.line The line number.\n   * @param {number} generated.column The column number.\n   * @param {?_sourceMapGenerator.Position} original The position of a token.\n   * @param {number} original.line The line number.\n   * @param {number} original.column The column number.\n   * @param {?string} source\n   * @param {?string} name\n   */\n  _validateMapping(generated, original, source, name) {\n    // When original is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (original && typeof original.line != \"number\" && typeof original.column != \"number\") {\n      throw new Error(\n        \"original.line and original.column are not numbers -- you probably meant to omit \" +\n            \"the original mapping entirely and only map the generated position. If so, pass \" +\n            \"null for the original mapping instead of an object with empty or null values.\"\n      )\n    }\n\n    if (generated && \"line\" in generated && \"column\" in generated\n        && generated.line > 0 && generated.column >= 0\n        && !original && !source && !name) {\n      // Case 1.\n\n    } else if (generated && \"line\" in generated && \"column\" in generated\n             && original && \"line\" in original && \"column\" in original\n             && generated.line > 0 && generated.column >= 0\n             && original.line > 0 && original.column >= 0\n             && source) {\n      // Cases 2 and 3.\n\n    } else {\n      throw new Error(\"Invalid mapping: \" + JSON.stringify({\n        generated,\n        source,\n        original,\n        name,\n      }))\n    }\n  }\n\n  /**\n   * Serialize the accumulated mappings in to the stream of base 64 VLQs specified by the source map format.\n   */\n  _serializeMappings() {\n    let previousGeneratedColumn = 0\n    let previousGeneratedLine = 1\n    let previousOriginalColumn = 0\n    let previousOriginalLine = 0\n    let previousName = 0\n    let previousSource = 0\n    let result = \"\"\n    let next\n    let mapping\n    let nameIdx\n    let sourceIdx\n\n    const mappings = this._mappings.toArray()\n    for (let i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i]\n      next = \"\"\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += \";\"\n          previousGeneratedLine++\n        }\n      } else if (i > 0) {\n        if (!compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n          continue\n        }\n        next += \",\"\n      }\n\n      next += base64VLQ(mapping.generatedColumn\n                                 - previousGeneratedColumn)\n      previousGeneratedColumn = mapping.generatedColumn\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source)\n        next += base64VLQ(sourceIdx - previousSource)\n        previousSource = sourceIdx\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ(mapping.originalLine - 1\n                                   - previousOriginalLine)\n        previousOriginalLine = mapping.originalLine - 1\n\n        next += base64VLQ(mapping.originalColumn\n                                   - previousOriginalColumn)\n        previousOriginalColumn = mapping.originalColumn\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name)\n          next += base64VLQ(nameIdx - previousName)\n          previousName = nameIdx\n        }\n      }\n\n      result += next\n    }\n\n    return result\n  }\n\n  /**\n   * @param {!Array<string>} sources\n   * @param {string} [sourceRoot]\n   */\n  _generateSourcesContent(sources, sourceRoot) {\n    return sources.map(function(source) {\n      if (!this._sourcesContents) {\n        return null\n      }\n      if (sourceRoot)\n        source = relative(sourceRoot, source)\n      const key = toSetString(source)\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null\n    }, this)\n  }\n\n  /**\n   * Externalize the source map.\n   */\n  toJSON() {\n    const sources = this._sources.toArray()\n    const map = {\n      'version': this._version,\n      'sources': sources,\n      'names': this._names.toArray(),\n      'mappings': this._serializeMappings(),\n    }\n    if (this._file) map['file'] = this._file\n    if (this._sourceRoot) map['sourceRoot'] = this._sourceRoot\n    if (this._sourcesContents) {\n      map['sourcesContent'] = this._generateSourcesContent(sources, this._sourceRoot)\n    }\n\n    return map\n  }\n\n  /**\n   * Render the source map being generated to a string.\n   */\n  toString() {\n    return JSON.stringify(this.toJSON())\n  }\n}\n\nSourceMapGenerator.prototype._version = 3\n\n/* typal types/index.xml */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_sourceMapGenerator.Config} Config Options for the program.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _sourceMapGenerator.Config Options for the program.\n * @prop {string} [file] The filename of the generated source.\n * @prop {string} [sourceRoot] A root for all relative URLs in this source map.\n * @prop {boolean} [skipValidation=false] When `true`, disables validation of mappings as they are added. This can improve performance but should be used with discretion, as a last resort. Even then, one should avoid using this flag when running tests, if possible. Default `false`.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_sourceMapGenerator.Position} Position The position of a token.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _sourceMapGenerator.Position The position of a token.\n * @prop {number} line The line number.\n * @prop {number} column The column number.\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {_sourceMapGenerator.Mapping} Mapping\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {Object} _sourceMapGenerator.Mapping\n * @prop {?string} source The source file.\n * @prop {number} generatedLine The generated line number.\n * @prop {number} generatedColumn The generated column number.\n * @prop {?number} originalLine The original line number.\n * @prop {?number} originalColumn The original column number.\n * @prop {?string} name The name of the mapping.\n */\n","import { relative, join } from 'path'\nimport { appendFileSync, writeFileSync } from 'fs'\nimport SourceMapGenerator from '@a-la/source-map-generator'\nimport { inlineCommentsRe, commentsRe } from '@a-la/markers'\n\n/**\n * @param {Object} conf\n * @param {string} [conf.file] The filename of the generated source.\n * @param {string} [conf.originalSource] The content of the source file.\n * @param {string} [conf.pathToSrc] The source file\n * @param {string} [conf.sourceRoot] A root for all relative URLs in this source map.\n */\nexport const getMap = ({\n  file,\n  originalSource: original,\n  pathToSrc: source,\n  sourceRoot,\n}) => {\n  const gen = new SourceMapGenerator({\n    file,\n    sourceRoot,\n  })\n  const linesInSource = original\n    .replace(commentsRe, (match, pos) => {\n      const next = original[pos + match.length]\n      if (next == '\\n') return '\\n'.repeat(match.split('\\n').length - 1)\n\n      const lines = match.split('\\n')\n      const lastLineI = lines.length - 1\n      const lastLine = lines[lastLineI]\n      const ss = ' '.repeat(lastLine.length)\n      const ws = '\\n'.repeat(lastLineI)\n      return `${ws}${ss}`\n    })\n    .replace(inlineCommentsRe, (match) => {\n      return ' '.repeat(match.length)\n    })\n    .split('\\n')\n  linesInSource.forEach((l, i) => {\n    const line = i + 1\n    l\n      .replace(/(?:(?:\\s+)|(?:[$_\\w\\d]+)|.)/g, (match, column) => {\n        if (column == 0 && /^\\s+$/.test(match)) return\n        const generated = {\n          line,\n          column,\n        }\n        const m = {\n          generated,\n          source,\n          original: generated,\n        }\n        gen.addMapping(m)\n      })\n  })\n  gen.setSourceContent(source, original)\n  const sourceMap = gen.toString()\n  return sourceMap\n}\n\nexport default function addSourceMap({\n  source, outputDir, name, destination, file, originalSource,\n}) {\n  const pathToSrc = relative(outputDir, source)\n\n  const map = getMap({\n    file, originalSource, pathToSrc,\n  })\n\n  const sourceMapName = `${name}.map`\n  const comment = `\\n//# sourceMappingURL=${sourceMapName}`\n  appendFileSync(destination, comment)\n\n  const sourceMapPath = join(outputDir, sourceMapName)\n  writeFileSync(sourceMapPath, map)\n}","import { join } from 'path'\nimport { chmodSync, lstatSync } from 'fs'\n\nexport const copyMode = (input, output) => {\n  const ls = lstatSync(input)\n  const { mode } = ls\n  chmodSync(output, mode)\n}\n\nlet _cached = null\n\n/**\n * Reads the config from the cwd.\n * @return {!_alamode.Config} The config from .alamoderc, or an empty object if it does not exist.\n */\nexport const getConfig = () => {\n  if (_cached) return _cached\n  let config = {}\n  try {\n    const r = join(process.cwd(), '.alamoderc.json')\n    config = require(r)\n  } catch (err) {\n    return config\n  }\n  const { env: { ALAMODE_ENV } } = process\n  const { 'env': env } = config\n  const c = (env && ALAMODE_ENV in env) ? env[ALAMODE_ENV] : config\n\n  delete c['env']\n\n  _cached = c\n  return c\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').Config} _alamode.Config\n */","import { Replaceable } from 'restream'\nimport makeRules from '@a-la/markers'\nimport ALaImport from '@a-la/import'\nimport ALaExport from '@a-la/export'\nimport whichStream from 'which-stream'\nimport { read } from '@wrote/wrote'\nimport { basename, dirname } from 'path'\nimport { getMap } from './source-map'\nimport { getConfig } from './'\n\nconst getRules = () => {\n  const r = [\n    ...ALaImport,\n    ...ALaExport,\n  ]\n  const { rules, markers } = makeRules(r)\n  return { rules, markers }\n}\n\n/**\n * The class to hold markers and config.\n * @implements {_alamode.\u00c0LaMode}\n */\nexport class \u00c0LaMode extends Replaceable {\n  /**\n   * @param {string} file\n   */\n  constructor(file, opts = {}) {\n    const config = getConfig()\n    const { rules, markers } = getRules()\n    super(rules)\n\n    const { noSourceMaps = false, debug = false,\n      renameOnly = false } = opts\n\n    this.markers = markers\n    this.config = config\n    this.file = file\n    this.noSourceMaps = noSourceMaps\n    this.async = true\n    this.renameOnly = renameOnly\n    this.stopProcessing = debug\n  }\n}\n\n/**\n * Run a transform stream, and return the source code that was transformed.\n */\nexport const transformStream = async ({\n  source,\n  destination,\n  writable,\n  debug,\n  noSourceMaps,\n  renameOnly,\n}) => {\n  const alamode = new \u00c0LaMode(source, {\n    noSourceMaps, debug, renameOnly,\n  })\n\n  const sourceCode = await read(source)\n  alamode.end(sourceCode)\n\n  await Promise.all([\n    whichStream({\n      source,\n      ...(writable ? { writable } : { destination }),\n      readable: alamode,\n    }),\n    new Promise((r, j) => alamode.on('finish', r).on('error', j)),\n  ])\n  return sourceCode\n}\n\nclass Context {\n  constructor(config, markers, filename) {\n    this.listeners = {}\n    this.markers = markers\n    this.config = config\n    this.file = filename\n  }\n  on(event, listener) {\n    this.listeners[event] = listener\n  }\n  emit(event, data) {\n    this.listeners[event](data)\n  }\n}\n\nexport const transformString = (source, filename) => {\n  const config = getConfig()\n  const { rules, markers } = getRules()\n  const context = new Context(config, markers, filename)\n\n  const replaced = rules.reduce((acc, { re, replacement }) => {\n    const newAcc = acc.replace(re, replacement.bind(context))\n    return newAcc\n  }, source)\n  return replaced\n}\n\n/**\n * Transforms the code synchronously. Used in the `require` hook.\n * @param {string} source Source code as a string.\n * @param {string} filename The file name of the source.\n * @param {boolean} [noMap] Do not create source maps (used for JSX).\n */\nexport const syncTransform = (source, filename, noMap = false) => {\n  const replaced = transformString(source, filename)\n  if (noMap) return replaced\n  const file = basename(filename)\n  const sourceRoot = dirname(filename)\n  const map = getMap({\n    originalSource: source,\n    pathToSrc: file,\n    sourceRoot,\n  })\n  const b64 = Buffer.from(map).toString('base64')\n  const s = `//# sourceMappingURL=data:application/json;charset=utf-8;base64,${b64}`\n\n  const code = `${replaced}\\n${s}`\n\n  return code\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../../types').\u00c0LaMode} _alamode.\u00c0LaMode\n */","import addHook from '@artdeco/pirates'\nimport transpileJsx from '@a-la/jsx'\nimport { syncTransform } from './lib/transform'\nimport { getConfig } from './lib'\n\n/**\n * @type {_alamode.alamode}\n */\nconst alamode = (conf = {}) => {\n  const c = getConfig()\n\n  const {\n    pragma = 'const { h } = require(\"preact\");',\n    noWarning = false,\n    matcher,\n    ignoreNodeModules,\n  } = { ...conf, ...c }\n\n  if (global.ALAMODE_JS) {\n    if (!noWarning)\n      console.warn('Reverting JS hook to add new one.')\n    global.ALAMODE_JS()\n  }\n  if (global.ALAMODE_JSX) {\n    if (!noWarning) {\n      console.warn('Reverting JSX hook to add new one, pragma:')\n      console.warn(pragma)\n    }\n    global.ALAMODE_JSX()\n  }\n  global.ALAMODE_JS = addHook(\n    JSHook,\n    { exts: ['.js'], matcher, ignoreNodeModules }\n  )\n  global.ALAMODE_JSX = addHook(\n    (code, filename) => JSXHook(code, filename, pragma),\n    { exts: ['.jsx'], matcher, ignoreNodeModules }\n  )\n}\n\nexport const JSHook = (code, filename) => {\n  const hasSourceMap = /\\/\\/ *# *sourceMappingURL=.+\\s*$/.test(code)\n  const res = syncTransform(code, filename, hasSourceMap)\n  return res\n}\n\nexport const JSXHook = (code, filename, pragma) => {\n  const r = syncTransform(code, filename, true)\n  const res = transpileJsx(r)\n  const hc = `${pragma}${res}`\n  return hc\n}\n\nexport default alamode\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').HookConfig} _alamode.HookConfig\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('..')} _alamode.alamode\n */","/*!\n * \u00c0LaMode: transpiler of import/export statements and JSX components.\n *\n * Copyright (C) 2020  Art Deco\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as\n * published by the Free Software Foundation, either version 3 of the\n * License, or (at your option) any later version.\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n *\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport '../types/externs'\nimport alamode from './'\n\nmodule.exports = alamode"],
"names":["$jscompDefaultExport","_module","builtinModules","basename","path","dirname","extname","join","parse","relative","resolve","Module","module","constructor","length","BuiltinModule","shouldCompile","filename","exts","matcher","ignoreNodeModules","includes","resolvedFilename","nodeModulesRegex","test","addHook","hook","opts","extensions","Array","isArray","reverted","loaders","oldLoaders","originalJSLoader","forEach","ext","TypeError","oldLoader","mod","compile","code","newCode","Error","HOOK_RETURNED_NOTHING_ERROR_MESSAGE","revert","Script","vm","findPosition","stack","input","h","l2","split","l","parseInt","replace","m","d","c","indexOf","slice","detectJSX","err","message","bl","Writable","stream","checkRule","reObject","hasRe","re","RegExp","type","replacement","SyncReplaceable","rules","filter","fr","reduce","s","acc","_broke","Acc","commonError","t","match","args","call","p","e","thrownError","commonLine","i","substr","li","lastIndexOf","brake","replace.brake","getDefaultRegExp","name","toUpperCase","getDefaultReplacement","index","makeMarkers","matchers","config","Object","keys","res","key","getReplacement","getRegex","regExp","map","lastIndex","marker","makePasteRule","pipeRules","rule","pr","makeCutRule","homedir","os","extractPathRegex","pathRegex","homeDir","cleanStack","pretty","ignoredModules","j","source","x","pathMatches","trim","p1","getStackSegment","from","oneLine","splitStack","undefined","item","items","getEntryStack","transparent","stackSegment","getCallerFromArguments","caller","makeCallback","entryCaller","entryStack","shadow","cb","messageOrError","arguments","errorStack","calleeStackLine","isError","stackMessage","stackHeading","assign","properties","erotic","pipeError","streamA","streamB","once","emit","Catchment","options","binary","rs","er","proxyError","wrap","_","_caughtData","_promise","Promise","r","on","Buffer","concat","pipe","chunk","encoding","callback","push","collect","readable","promise","getTagName","string","tagName","exec","getProps","props","withClass","classNames","renameMap","positions","current","closing","opening","open","close","obj","destructuring","whitespace","lastClose","before","wsBefore","propName","wsBeforeAssign","afterAssign","val","beforeAssign","beforeOrNot","bb","plain","ws","getPlain","whatsLeft","ro","cl","k","className","cn","class","wsAfterAssign","q","repeat","Boolean","makeObjectBody","pp","quoteProps","beforeCloseWs","a","v","kk","isComponentName","pragma","children","warn","tn","qp","cc","prev","comma","findEnding","contentEnd","preString","extract","stringWithTag","arrow","content","selfClosing","ExtractedJSX","contentStart","stringEnd","opensClosing","endsWith","untilEnd","ce","tSelfClosing","string2","getQuoted","_b","_a","b","rr","parseSimpleContent","temps","expressionStack","jsxStack","isExpression","to","expression","extractedJsx","getTemps","lastTo","ar","transpileJSX","prop2class","position","parseContent","f","after","ld","newRes","contents","jsx","part","strBefore","strAfter","defObj","ef","ias","ii","tt","as","commentsRe","inlineCommentsRe","makeRules","comments","inlineComments","strings","literals","escapes","regexes","regexGroups","mr","cutComments","cutInlineComments","cutStrings","cutLiterals","cutEscapes","cutRegexes","cutRegexGroups","pasteComments","pasteInlineComments","pasteStrings","pasteLiterals","pasteEscapes","pasteRegexes","pasteRegexGroups","allRules","stopRule","markers","stop","getIfEsModule","replaceRequire","seg","quotes","src","defName","eq","req","getSource","import","fromRe","alwaysCheckES","esCheck","isAlamodeModule","alamodeModules","makePromise","fn","resolveValue","fnLength","reject","error","allArgs","createReadStream","fs","lstat","exists","ls","read","resolveDependency","isDir","checkSources","isDirectory","fileChecked","fileRes","startsWith","ROOT","findPackageJson","dir","process","cwd","fields","soft","fold","findEntry","entryExists","main","entry","version","packageName","rest","result","packageJson","hasMain","JSON","resolved","indexExists","aliasesToDestructuring","namedSeg","mm","getStdlib","file","stdlib","packages","rel","finish","fromSeg","defSeg","isLocal","ifES","getDef","replacedNamed","getNamed","syncGetIsLocal","getIsLocal","cache","sync","alamode","o","n","seq","importRe","sd","realSrc","renameOnly","renamed","isLocalCache","async","then","blank","Import","importAs","importSeg","varName","reserved","idRegex","splitNames","getNamesMap","names","nn","at","nt","checkReserved","simpleGetWs","segment","getWs","simple","lines","getRes","exportSeg","noSourceMaps","privateName","allNames","alias","fromPrivate","makeExports","exportsMap","def","setupRule","exports","detectRule","typeRe","whatSeg","fromRule","advancedRe","exportRe","detectNamed","exportsSeg","newLine","sn","nl","detectDefault","replaceDefault","defaultSeg","addExportsRule","intToCharMap","base64VLQ_encode","aValue","encoded","vlq","digit","VLQ_BASE_MASK","VLQ_BASE_SHIFT","VLQ_CONTINUATION_BIT","URL","url","strcmp","aStr1","aStr2","compareByGeneratedPositionsInflated","mappingA","mappingB","cmp","generatedLine","generatedColumn","originalLine","originalColumn","buildSafeBase","str","maxDotParts","id","ident","prefix","base","ABSOLUTE_SCHEME","getURLType","computeRelativeURL","rootURL","targetURL","targetParts","pathname","rootParts","pop","shift","relativePath","search","hash","normalize","createSafeHandler","toString","urlType","root","target","protocol","user","password","hostname","port","ArraySet","_array","_set","Map","allowDuplicates","isDuplicate","has","idx","set","aStr","get","MappingList","_sorted","_last","mapping","lineA","columnA","lineB","columnB","setSourceContent","sourceFile","sourcesContent","_sourceRoot","_sourcesContents","create","_generateSourcesContent","sources","sourceRoot","prototype","hasOwnProperty","SourceMapGenerator","conf","skipValidation","_file","_skipValidation","_sources","_names","_mappings","previousGeneratedColumn","previousGeneratedLine","previousOriginalColumn","previousOriginalLine","previousName","previousSource","next","sourceIdx","_serializeMappings","sort","len","mappings","base64VLQ","nameIdx","_version","stringify","toJSON","getMap","original","gen","pos","lastLineI","ss","lastLine","linesInSource","line","column","generated","add","sourceMap","_cached","getConfig","require","ALAMODE_ENV","env","getRules","Context","listeners","event","listener","data","transformString","context","replaced","newAcc","bind","syncTransform","noMap","originalSource","pathToSrc","b64","JSHook","hasSourceMap","noWarning","global","ALAMODE_JS","console","ALAMODE_JSX","hc"]
}
