{"version":3,"sources":["../../src/bin/index.js"],"names":[],"mappings":"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","file":"bin/index.js","sourcesContent":["#!/usr/bin/env node\nimport argufy from 'argufy'\nimport usually from 'usually'\nimport { version } from '../../package.json'\nimport catcher from './catcher'\nimport { transpile } from './transpile'\n\nconst {\n  input: _input,\n  output: _output,\n  version: _version,\n  help: _help,\n  ignore: _ignore,\n  noSourceMaps: _noSourceMaps,\n} = argufy({\n  input: { command: true },\n  output: { short: 'o' },\n  version: { short: 'v', boolean: true },\n  help: { short: 'h', boolean: true },\n  ignore: { short: 'i' },\n  noSourceMaps: { short: 's', boolean: true },\n})\n\nif (_help) {\n  const usage = usually({\n    usage: {\n      source: `Location of the input to the transpiler,\neither a directory or a file.`,\n      '--output, -o': `Location to save results to. Passing \"-\"\nwill print to stdout when source is a file.`,\n      '--help, -h': 'Display help information.',\n      '--version, -v': 'Show version.',\n      '--ignore, -i': `Paths to files to ignore, relative to\nsource.`,\n      '--noSourceMaps, -s': 'Don\\'t generate source maps.',\n    },\n    description: 'A tool to transpile JavaScript packages using regular expressions.',\n    line: 'alamode source [-o destination]',\n    example: 'alamode src -o build',\n  })\n  console.log(usage)\n  process.exit()\n} else if (_version) {\n  console.log('v%s', version)\n  process.exit()\n}\n\n(async () => {\n  try {\n    const ignore = _ignore ? _ignore.split(','): []\n    await transpile({\n      input: _input,\n      output: _output,\n      noSourceMaps: _noSourceMaps,\n      ignore,\n    })\n  } catch (err) {\n    catcher(err)\n  }\n})()"]}