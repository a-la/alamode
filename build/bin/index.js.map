{"version":3,"sources":["../../src/bin/index.js"],"names":[],"mappings":"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","file":"bin/index.js","sourcesContent":["#!/usr/bin/env node\nimport argufy from 'argufy'\nimport readDirStructure from '@wrote/read-dir-structure'\nimport ensurePath from '@wrote/ensure-path'\nimport usually from 'usually'\nimport {\n  Replaceable,\n  makeMarkers, makeCutRule, makePasteRule,\n} from 'restream'\nimport { resolve, join } from 'path'\nimport ALaImport from '@a-la/import'\nimport ALaExport from '@a-la/export'\nimport { createReadStream, lstatSync } from 'fs'\nimport { debuglog } from 'util'\nimport whichStream from 'which-stream'\nimport Catchment from 'catchment'\nimport { version } from '../../package.json'\nimport catcher from './catcher'\nimport { copyMode, commentsRe, inlineCommentsRe } from '../lib'\nimport writeSourceMap from '../lib/source-map'\n\nconst LOG = debuglog('alamode')\n\nconst {\n  input: _input,\n  output: _output,\n  version: _version,\n  help: _help,\n} = argufy({\n  input: { command: true },\n  output: { short: 'o' },\n  version: { short: 'v', boolean: true },\n  help: { short: 'h', boolean: true },\n})\n\nif (_help) {\n  const usage = usually({\n    usage: {\n      source: `Location of the input to the transpiler,\neither a directory or a file.`,\n      '--output, -o': `Location to save results to. Passing \"-\"\nwill print to stdout when source is a file.`,\n    },\n    description: 'A tool to transpile JavaScript packages using regular expressions.',\n    line: 'alamode source [-o destination]',\n    example: 'alamode src -o build',\n  })\n  console.log(usage)\n  process.exit()\n} else if (_version) {\n  console.log('v%s', version)\n  process.exit()\n}\n\nconst processFile = async (input, relPath, name, output) => {\n  const inputPath = resolve(input, relPath, name)\n  const outputPath = output == '-' ? '-' : resolve(output, relPath, name)\n  const file = join(relPath, name)\n  LOG(file)\n\n  const { comments, inlineComments } = makeMarkers({\n    comments: commentsRe,\n    inlineComments: inlineCommentsRe,\n    string: /'(.*)'/gm,\n  })\n  const mr = [comments, inlineComments]\n  const [cutComments, cutInlineComments] = mr\n    .map(makeCutRule)\n  const [pasteComments, pasteInlineComments] = mr\n    .map(makePasteRule)\n\n  const replaceable = new Replaceable([\n    cutComments,\n    cutInlineComments,\n    ...ALaImport,\n    ...ALaExport,\n    pasteInlineComments,\n    pasteComments,\n  ])\n\n  await ensurePath(outputPath)\n\n  const readable = createReadStream(inputPath)\n  readable.pipe(replaceable)\n  const { promise: sourcePromise } = new Catchment({ rs: readable })\n\n  await Promise.all([\n    whichStream({\n      source: inputPath,\n      readable: replaceable,\n      destination: outputPath,\n    }),\n    new Promise((r, j) => {\n      readable.once('error', j)\n      replaceable.once('error', j)\n      replaceable.once('end', r)\n    }),\n  ])\n\n  const source = await sourcePromise\n\n  if (outputPath != '-') {\n    copyMode(inputPath, outputPath)\n    writeSourceMap({\n      source,\n      inputPath, output, name, relPath,\n    })\n  }\n}\n\nconst processDir = async (input, output, relPath = '.') => {\n  const path = resolve(input, relPath)\n  const { content } = await readDirStructure(path)\n  const k = Object.keys(content)\n  await k.reduce(async (acc, name) => {\n    await acc\n    const { type } = content[name]\n    if (type == 'File') {\n      await processFile(input, relPath, name, output)\n    } else if (type == 'Directory') {\n      const newRelPath = join(relPath, name)\n      await processDir(input, output, newRelPath)\n    }\n  }, Promise.resolve())\n}\n\nconst run = async (input, output = '-') => {\n  if (!input) throw new Error('Please specify the source file or directory.')\n\n  const ls = lstatSync(input)\n  if (ls.isDirectory()) {\n    if (!_output) throw new Error('Please specify the output directory.')\n    await processDir(input, _output)\n  } else if (ls.isFile()) {\n    await processFile(input, '.', '.', output)\n  }\n  if (output != '-') process.stdout.write(`Transpiled code saved to ${output}\\n`)\n}\n\n(async () => {\n  try {\n    await run(_input, _output)\n  } catch (err) {\n    catcher(err)\n  }\n})()"]}