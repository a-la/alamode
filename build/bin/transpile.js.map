{"version":3,"sources":["../../src/bin/transpile.js"],"names":[],"mappings":"AAAA,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI;AAC7C,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE;AAC7B,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS;AACvD,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI;AAC1C,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI;AAC9B,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG;AAChC,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG;AAC7C,MAAM,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS;;AAEjD,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC;;AAE9B,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;EACzB,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,YAAY,CAAC,CAAC,QAAQ;AAC9D,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACJ,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI;EAC/B,EAAE,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE3B,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACnC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI;;EAE/B,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO;EAC9D,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,IAAI;EAC/D,GAAG,CAAC,IAAI;;EAER,KAAK,CAAC,UAAU,CAAC,WAAW;;EAE5B,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC,KAAK,CAAC,eAAe,CAAC;IAC3C,MAAM;IACN,WAAW;IACX,QAAQ;EACV,CAAC;;EAED,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACjB,QAAQ,CAAC,MAAM,CAAC,CAAC,WAAW;IAC5B,EAAE,CAAC,CAAC,YAAY,CAAC,CAAC;IAClB,cAAc,CAAC;MACb,WAAW;MACX,IAAI;MACJ,IAAI;MACJ,SAAS;MACT,MAAM;MACN,cAAc;IAChB,CAAC;EACH;AACF;;AAEA,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;EACxB,KAAK;EACL,MAAM;EACN,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACb,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EACX,YAAY;EACZ,QAAQ;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACJ,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO;EAChC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,gBAAgB,CAAC,IAAI;EAC/C,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO;EAC7B,KAAK,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IAClC,KAAK,CAAC;IACN,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI;IAC7B,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;MAClB,KAAK,CAAC,WAAW,CAAC;QAChB,KAAK,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,YAAY;MACpD,CAAC;IACH,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;MAC9B,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI;MACrC,KAAK,CAAC,UAAU,CAAC;QACf,KAAK;QACL,MAAM;QACN,MAAM;QACN,OAAO,CAAC,CAAC,UAAU;QACnB,YAAY;QACZ,QAAQ;MACV,CAAC;IACH;EACF,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACtB;;AAEA,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;EAC9B,KAAK;EACL,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACZ,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;EACX,YAAY;EACZ,QAAQ;AACV,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACJ,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC;;EAE1E,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK;EAC1B,EAAE,CAAC,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;IACpB,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;IACnE,KAAK,CAAC,UAAU,CAAC;MACf,KAAK;MACL,MAAM;MACN,MAAM;MACN,YAAY;MACZ,QAAQ;IACV,CAAC;EACH,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;IACtB,KAAK,CAAC,WAAW,CAAC;MAChB,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC;MACrB,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;MACZ,IAAI,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC;MACrB,MAAM;MACN,MAAM;MACN,YAAY;MACZ,QAAQ;IACV,CAAC;EACH;EACA,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAChF","file":"bin/transpile.js","sourcesContent":["import { join, basename, dirname } from 'path'\nimport { lstatSync } from 'fs'\nimport readDirStructure from '@wrote/read-dir-structure'\nimport ensurePath from '@wrote/ensure-path'\nimport { debuglog } from 'util'\nimport { copyMode } from '../lib'\nimport writeSourceMap from '../lib/source-map'\nimport { transformStream } from '../lib/transform'\n\nconst LOG = debuglog('alamode')\n\nconst processFile = async ({\n  input, relPath, name, output, ignore, noSourceMaps, advanced,\n}) => {\n  const file = join(relPath, name)\n  if (ignore.includes(file)) return\n\n  const isOutputStdout = output == '-'\n  const source = join(input, file)\n\n  const outputDir = isOutputStdout ? null : join(output, relPath)\n  const destination = isOutputStdout ? '-' : join(outputDir, name)\n  LOG(file)\n\n  await ensurePath(destination)\n\n  const originalSource = await transformStream({\n    source,\n    destination,\n    advanced,\n  })\n\n  if (output != '-') {\n    copyMode(source, destination)\n    if (noSourceMaps) return\n    writeSourceMap({\n      destination,\n      file,\n      name,\n      outputDir,\n      source,\n      originalSource,\n    })\n  }\n}\n\nconst processDir = async ({\n  input,\n  output,\n  relPath = '.',\n  ignore = [],\n  noSourceMaps,\n  advanced,\n}) => {\n  const path = join(input, relPath)\n  const { content } = await readDirStructure(path)\n  const k = Object.keys(content)\n  await k.reduce(async (acc, name) => {\n    await acc\n    const { type } = content[name]\n    if (type == 'File') {\n      await processFile({\n        input, relPath, name, output, ignore, noSourceMaps,\n      })\n    } else if (type == 'Directory') {\n      const newRelPath = join(relPath, name)\n      await processDir({\n        input,\n        output,\n        ignore,\n        relPath: newRelPath,\n        noSourceMaps,\n        advanced,\n      })\n    }\n  }, Promise.resolve())\n}\n\nexport const transpile = async ({\n  input,\n  output = '-',\n  ignore = [],\n  noSourceMaps,\n  advanced,\n}) => {\n  if (!input) throw new Error('Please specify the source file or directory.')\n\n  const ls = lstatSync(input)\n  if (ls.isDirectory()) {\n    if (!output) throw new Error('Please specify the output directory.')\n    await processDir({\n      input,\n      output,\n      ignore,\n      noSourceMaps,\n      advanced,\n    })\n  } else if (ls.isFile()) {\n    await processFile({\n      input: dirname(input),\n      relPath: '.',\n      name: basename(input),\n      output,\n      ignore,\n      noSourceMaps,\n      advanced,\n    })\n  }\n  if (output != '-') process.stdout.write(`Transpiled code saved to ${output}\\n`)\n}\n"]}