{"version":3,"sources":["../../src/lib/source-map.js"],"names":[],"mappings":"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","file":"lib/source-map.js","sourcesContent":["import { relative, join } from 'path'\nimport { appendFileSync, writeFileSync } from 'fs'\nimport { SourceMapGenerator } from 'source-map'\nimport { inlineCommentsRe, commentsRe } from '.'\n\nexport const getMap = ({\n  file,\n  originalSource,\n  pathToSrc,\n  sourceRoot,\n}) => {\n  const gen = new SourceMapGenerator({\n    file,\n    sourceRoot,\n  })\n  const linesInSource = originalSource\n    .replace(commentsRe, (match, pos) => {\n      const next = originalSource[pos + match.length]\n      if (next == '\\n') return '\\n'.repeat(match.split('\\n').length - 1)\n\n      const lines = match.split('\\n')\n      const lastLineI = lines.length - 1\n      const lastLine = lines[lastLineI]\n      const ss = ' '.repeat(lastLine.length)\n      const ws = '\\n'.repeat(lastLineI)\n      return `${ws}${ss}`\n    })\n    .replace(inlineCommentsRe, (match) => {\n      return ' '.repeat(match.length)\n    })\n    .split('\\n')\n  linesInSource.forEach((l, i) => {\n    const line = i + 1\n    l\n      .replace(/(?:(?:\\s+)|(?:[$_\\w\\d]+)|.)/g, (match, column) => {\n        if (column == 0 && /^\\s+$/.test(match)) return\n        const pp = {\n          line,\n          column,\n        }\n        const m = {\n          generated: pp,\n          source: pathToSrc,\n          original: pp,\n        }\n        gen.addMapping(m)\n      })\n  })\n  gen.setSourceContent(pathToSrc, originalSource)\n  const sourceMap = gen.toString()\n  return sourceMap\n}\n\nexport default function addSourceMap({\n  source, outputDir, name, destination, file, originalSource,\n}) {\n  const pathToSrc = relative(outputDir, source)\n\n  const map = getMap({\n    file, originalSource, pathToSrc,\n  })\n\n  const sourceMapName = `${name}.map`\n  const comment = `\\n//# sourceMappingURL=${sourceMapName}`\n  appendFileSync(destination, comment)\n\n  const sourceMapPath = join(outputDir, sourceMapName)\n  writeFileSync(sourceMapPath, map)\n}"]}