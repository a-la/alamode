{
  "index.js": "const { libMethod } = require('./lib')\n\n/**\n * The main function.\n */\nasync function main () {\n  await libMethod()\n}\n\nmodule.exports = main\n//# sourceMappingURL=index.js.map",
  "index.js.map": "{\"version\":3,\"sources\":[\"../../fixture/src/index.js\"],\"names\":[],\"mappings\":\"AAAA,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG;;;;;AAKhC,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;EACpC,KAAK,CAAC,SAAS,CAAC;AAClB\",\"file\":\"index.js\",\"sourcesContent\":[\"import { libMethod } from './lib'\\n\\n/**\\n * The main function.\\n */\\nexport default async function main () {\\n  await libMethod()\\n}\"]}",
  "lib": {
    "index.js": "let method = require('./method'); if (method && method.__esModule) method = method.default;\n\n/**\n * A library method to write test.\n * @param {Date} [date] The date. Default is current date.\n */\nconst libMethod = async (date = new Date()) => {\n  const t = await Promise.resolve(`test - ${date.toUTCString()}`)\n  process.stdout.write(t)\n  method()\n}\n\nmodule.exports.libMethod = libMethod\n//# sourceMappingURL=index.js.map",
    "index.js.map": "{\"version\":3,\"sources\":[\"../../../fixture/src/lib/index.js\"],\"names\":[],\"mappings\":\"AAAA,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM;;;;;;AAM5B,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACpD,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;EAC9D,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;EACtB,MAAM,CAAC;AACT\",\"file\":\"lib/index.js\",\"sourcesContent\":[\"import method from './method'\\n\\n/**\\n * A library method to write test.\\n * @param {Date} [date] The date. Default is current date.\\n */\\nexport const libMethod = async (date = new Date()) => {\\n  const t = await Promise.resolve(`test - ${date.toUTCString()}`)\\n  process.stdout.write(t)\\n  method()\\n}\"]}",
    "method.js": "/**\n * A library method to write `method`.\n * @param {boolean} [test=false] Whether to test.\n */\nconst method = (test) => {\n  process.stdout.write(test ? 'method\\n' : `method: ${test}\\n`)\n}\n\nmodule.exports = method\n//# sourceMappingURL=method.js.map",
    "method.js.map": "{\"version\":3,\"sources\":[\"../../../fixture/src/lib/method.js\"],\"names\":[],\"mappings\":\";;;;AAIA,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;EACvB,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC9D;;AAEA,MAAM,CAAC,OAAO,CAAC\",\"file\":\"lib/method.js\",\"sourcesContent\":[\"/**\\n * A library method to write `method`.\\n * @param {boolean} [test=false] Whether to test.\\n */\\nconst method = (test) => {\\n  process.stdout.write(test ? 'method\\\\n' : `method: ${test}\\\\n`)\\n}\\n\\nexport default method\"]}"
  },
  "run.js": "let main = require('.'); if (main && main.__esModule) main = main.default;\n\n// test\n\n/**\n * test\n */\ndebugger\n\n(async () => {\n  debugger\n  console.log(123); /* console.log(456); */ console.log(456)\n  await main() // ok node\n})()\n//# sourceMappingURL=run.js.map",
  "run.js.map": "{\"version\":3,\"sources\":[\"../../fixture/src/run.js\"],\"names\":[],\"mappings\":\"AAAA,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;;;;;;;AAOnB;;AAEA,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACX;EACA,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,yBAAyB,OAAO,CAAC,GAAG,CAAC,GAAG;EACzD,KAAK,CAAC,IAAI,CAAC,CAAC;AACd,CAAC,CAAC,CAAC\",\"file\":\"run.js\",\"sourcesContent\":[\"import main from '.'\\n\\n// test\\n\\n/**\\n * test\\n */\\ndebugger\\n\\n(async () => {\\n  debugger\\n  console.log(123); /* console.log(456); */ console.log(456)\\n  await main() // ok node\\n})()\"]}"
}